[19c473e15553] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa000 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[19c473e25f71] jit-backend-dump}
[19c473e2c5ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa085 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000488B1C2508E6150348C7042500E615030000000048C7042508E615030000000048895D38584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[19c473e2ecc8] jit-backend-dump}
[19c473e31f04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa12e +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BBB064120141FFD3488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[19c473e338a2] jit-backend-dump}
[19c473e366e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa191 +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BBF065120141FFD3488B442408F6400480488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[19c473e38072] jit-backend-dump}
[19c473e3b5e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa1fd +0  4883EC384889442408F20F114424184889EF48895C24284C89642430488B1C2508E615034C8B242500E6150348C7042500E615030000000048C7042508E615030000000041BBB064120141FFD3F20F10442418488B44240848891C2508E615034C89242500E61503488B5C24284C8B642430488D642438C3
[19c473e3d069] jit-backend-dump}
[19c473e40c38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa
[19c473e45561] jit-backend-dump}
[19c473e467bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa491 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000F20F1185C0000000F20F118DC8000000F20F1195D0000000F20F119DD8000000F20F11A5E0000000F20F11ADE8000000F20F11B5F0000000F20F11BDF8000000F2440F118500010000F2440F118D08010000F2440F119510010000F2440F119D18010000F2440F11A520010000F2440F11AD28010000F2440F11B530010000584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[19c473e48f8b] jit-backend-dump}
[19c473e4a206] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa
[19c473e56f01] jit-backend-dump}
[19c473e58819] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa6bd
[19c473e5b9af] jit-backend-dump}
[19c473e5cf8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa81e
[19c473e5fee0] jit-backend-dump}
[19c473e6101c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa988 +0  488B042508E6150348C7042500E615030000000048C7042508E61503000000004889453848C7451000C2B5014889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[19c473e625e0] jit-backend-dump}
[19c473e68362] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fa9e
[19c473e6c488] jit-backend-dump}
[19c473e6ed0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fabd6 +0  4889E74883EC0841BBD00F210141FFD34883C408488B042500E615034885C07501C34883C40849BB88A97FC9E77F000041FFE3
[19c473e70017] jit-backend-dump}
[19c473e70673] {jit-backend-counts
[19c473e70a42] jit-backend-counts}
[19c47442a7d0] {jit-backend
[19c4746efe37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97face
[19c4747066e6] jit-backend-dump}
[19c474707091] {jit-backend-addr
Loop 0 (<code object f, file 'source.py', line 4> #9 LOAD_FAST) has address 0x7fe7c97fad30 to 0x7fe7c97fae7b (bootstrap 0x7fe7c97face0)
[19c4747084f3] jit-backend-addr}
[19c474708f62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fadd6 +0  A1000000
[19c474709e17] jit-backend-dump}
[19c47470a414] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fade8 +0  B4000000
[19c47470ae2a] jit-backend-dump}
[19c47470b293] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fadf2 +0  CF000000
[19c47470bc50] jit-backend-dump}
[19c47470c075] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fae05 +0  E1000000
[19c47470c9b8] jit-backend-dump}
[19c47470cdc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fae16 +0  F5000000
[19c47470d695] jit-backend-dump}
[19c47470dc77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fae2d +0  28010000
[19c47470e564] jit-backend-dump}
[19c47470e995] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fae59 +0  21010000
[19c47470f2a6] jit-backend-dump}
[19c47470f74a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fae6f +0  55010000
[19c4747100a2] jit-backend-dump}
[19c474710d6a] jit-backend}
[19c4747123d4] {jit-log-opt-loop
# Loop 0 (<code object f, file 'source.py', line 4> #9 LOAD_FAST) : loop with 54 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p16 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+168: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, descr=TargetToken(140633495987968))
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+240: guard_value(i7, 1, descr=<Guard0x7fe7c9912980>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15]
+250: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard0x7fe7c9913358>) [p1, p0, p11, p2, p3, p4, i5, p6, p13, p15]
+268: guard_value(i5, 0, descr=<Guard0x7fe7c99132e0>) [i5, p1, p0, p2, p3, p4, p6, p11, p15]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #12 LOAD_CONST')
+278: guard_value(p4, ConstPtr(ptr20), descr=<Guard0x7fe7c9913268>) [p1, p0, p4, p2, p3, p6, p11, p15]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #15 COMPARE_OP')
+297: i21 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+301: i23 = int_lt(i21, 1103)
guard_true(i23, descr=<Guard0x7fe7c99131f0>) [p1, p0, p11, p2, p3, p6]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #21 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #24 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #27 INPLACE_ADD')
+314: i25 = int_add(i21, 1)
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #28 STORE_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #31 JUMP_ABSOLUTE')
+319: guard_not_invalidated(descr=<Guard0x7fe7c9913178>) [p1, p0, p2, p3, p6, i25]
+319: i27 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+327: i29 = int_lt(i27, 0)
guard_false(i29, descr=<Guard0x7fe7c9913100>) [p1, p0, p2, p3, p6, i25]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+337: label(p0, p1, p2, p3, p6, i25, descr=TargetToken(140633495988056))
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #12 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #15 COMPARE_OP')
+368: i30 = int_lt(i25, 1103)
guard_true(i30, descr=<Guard0x7fe7c9913088>) [p1, p0, p2, p3, p6, i25]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #21 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #24 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #27 INPLACE_ADD')
+381: i31 = int_add(i25, 1)
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #28 STORE_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #31 JUMP_ABSOLUTE')
+385: guard_not_invalidated(descr=<Guard0x7fe7c9913010>) [p1, p0, p2, p3, p6, i31, None]
+385: i33 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+393: i34 = int_lt(i33, 0)
guard_false(i34, descr=<Guard0x7fe7c9912f98>) [p1, p0, p2, p3, p6, i31, None]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+403: jump(p0, p1, p2, p3, p6, i31, descr=TargetToken(140633495988056))
+411: --end of the loop--
[19c4747929e2] jit-log-opt-loop}
[19c474a8bcae] {jit-backend
[19c474b8b379] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb100 +0  4881EC9800000048896C24604889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B0425B07916034829E0483B0425109F0103760D49BBD6AB7FC9E77F000041FFD349BBD8E067CCE77F00004D8B3B4D8D770149BBD8E067CCE77F00004D89334C8BB5380100004D8BBE800000004D8B6E504D8B66704D0FB6968E0000004D8B4E604D8B4678498B7E58498B7668488B5E10488B5618488B46204C89BD480100004C89AD500100004C898D580100004889BD60010000488995680100004889857001000049BB38E167CCE77F0000498B03488D500149BB38E167CCE77F00004989134983F8010F85000000004883FB017206813B180C00000F85000000004983FA000F850000000049BB80CE0CCAE77F00004D39DC0F85000000004C8B63084981FC4F0400000F8D000000004D8B560849BBB00007CAE77F00004D39DA0F85000000004D8B421049BB900E0CCAE77F00004D39D80F850000000048899D380100004C89B56001000049BB80B07FC9E77F00004C895D2041BBA05B840041FFD3F6450401740D49BBFDA17FC9E77F000041FFD348C74520000000004C8B70504889EB4C8B50604D85D20F85000000004C8B50404983FA000F85000000004D8D5424014C8B2425807816034983FC000F8C0000000049BB50E167CCE77F00004D8B234D8D74240149BB50E167CCE77F00004D89334981FA4F0400000F8D000000004D8D72014C8B1425807816034983FA000F8C000000004D89F2E9B6FFFFFF49BBF05194C9E77F0000415349BB00B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BB40AD95C9E77F0000415349BB10B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BBC8AC95C9E77F0000415349BB20B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BB50AC95C9E77F0000415349BB30B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BBD8AB95C9E77F0000415349BB40B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BB60AB95C9E77F0000415349BB50B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BBE8AA95C9E77F0000415349BB60B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BB70AA95C9E77F0000415349BB70B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BBF8A995C9E77F0000415349BB90B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BB80A995C9E77F0000415349BBA0B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BB08A995C9E77F0000415349BBB0B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BB90A895C9E77F0000415349BBC0B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BB18A895C9E77F0000415349BBD0B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BBA0A795C9E77F0000415349BBE0B07FC9E77F0000415349BB00A07FC9E77F000041FFE349BB28A795C9E77F0000415349BBF0B07FC9E77F0000415349BB00A07FC9E77F000041FFE3
[19c474b9edc8] jit-backend-dump}
[19c474b9f656] {jit-backend-addr
Loop 1 (<code object inlined_call, file 'source.py', line 14> #9 LOAD_FAST) has address 0x7fe7c97fb150 to 0x7fe7c97fb32b (bootstrap 0x7fe7c97fb100)
[19c474ba0722] jit-backend-addr}
[19c474ba105f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb1f6 +0  31010000
[19c474ba1e7c] jit-backend-dump}
[19c474ba2395] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb208 +0  44010000
[19c474ba2cfc] jit-backend-dump}
[19c474ba314d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb212 +0  5F010000
[19c474ba3a2b] jit-backend-dump}
[19c474ba3e5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb225 +0  71010000
[19c474ba4793] jit-backend-dump}
[19c474ba4bc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb236 +0  85010000
[19c474ba5566] jit-backend-dump}
[19c474ba59a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb24d +0  93010000
[19c474ba62ae] jit-backend-dump}
[19c474ba66e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb264 +0  A1010000
[19c474ba6f81] jit-backend-dump}
[19c474ba7727] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb2b8 +0  97010000
[19c474ba801d] jit-backend-dump}
[19c474ba844b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb2c6 +0  AE010000
[19c474ba8d0e] jit-backend-dump}
[19c474ba91df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb2dd +0  E1010000
[19c474ba9a8b] jit-backend-dump}
[19c474ba9ece] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb309 +0  DA010000
[19c474baa811] jit-backend-dump}
[19c474baac68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb31f +0  0E020000
[19c474bab57f] jit-backend-dump}
[19c474babe54] jit-backend}
[19c474bacfed] {jit-log-opt-loop
# Loop 1 (<code object inlined_call, file 'source.py', line 14> #9 LOAD_FAST) : loop with 77 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p16 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+168: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, descr=TargetToken(140633495988760))
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+240: guard_value(i7, 1, descr=<Guard0x7fe7c99451f0>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15]
+250: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard0x7fe7c995ad40>) [p1, p0, p11, p2, p3, p4, i5, p6, p13, p15]
+268: guard_value(i5, 0, descr=<Guard0x7fe7c995acc8>) [i5, p1, p0, p2, p3, p4, p6, p11, p15]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #12 LOAD_CONST')
+278: guard_value(p4, ConstPtr(ptr20), descr=<Guard0x7fe7c995ac50>) [p1, p0, p4, p2, p3, p6, p11, p15]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #15 COMPARE_OP')
+297: i21 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+301: i23 = int_lt(i21, 1103)
guard_true(i23, descr=<Guard0x7fe7c995abd8>) [p1, p0, p11, p2, p3, p6]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #21 LOAD_GLOBAL')
+314: p24 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+318: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x7fe7c995ab60>) [p1, p0, p24, p2, p3, p6, p11]
+337: p26 = getfield_gc(p24, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+341: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x7fe7c995aae8>) [p1, p0, p26, p24, p2, p3, p6, p11]
+360: guard_not_invalidated(descr=<Guard0x7fe7c995aa70>) [p1, p0, p24, p2, p3, p6, p11]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #24 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #27 CALL_FUNCTION')
+360: p29 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+424: p30 = getfield_gc(p29, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+428: p31 = force_token()
+431: p32 = getfield_gc(p29, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+435: guard_isnull(p32, descr=<Guard0x7fe7c995a9f8>) [p1, p0, p29, p32, p2, p3, p6, p11, p31, p30]
+444: i33 = getfield_gc(p29, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+448: i34 = int_is_zero(i33)
guard_true(i34, descr=<Guard0x7fe7c995a980>) [p1, p0, p29, p2, p3, p6, p11, p31, p30]
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #0 LOAD_FAST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #3 LOAD_CONST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #6 BINARY_ADD')
+458: i36 = int_add(i21, 1)
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #7 RETURN_VALUE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #30 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #33 JUMP_ABSOLUTE')
+463: guard_not_invalidated(descr=<Guard0x7fe7c995a908>) [p1, p0, p2, p3, p6, i36, None, None]
+463: i39 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+471: i41 = int_lt(i39, 0)
guard_false(i41, descr=<Guard0x7fe7c995a890>) [p1, p0, p2, p3, p6, i36, None, None]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+481: p42 = same_as(ConstPtr(ptr27))
+481: label(p0, p1, p2, p3, p6, i36, descr=TargetToken(140633495988848))
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #12 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #15 COMPARE_OP')
+512: i43 = int_lt(i36, 1103)
guard_true(i43, descr=<Guard0x7fe7c995a818>) [p1, p0, p2, p3, p6, i36]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #21 LOAD_GLOBAL')
+525: guard_not_invalidated(descr=<Guard0x7fe7c995a7a0>) [p1, p0, p2, p3, p6, i36]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #24 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #27 CALL_FUNCTION')
+525: p44 = force_token()
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #0 LOAD_FAST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #3 LOAD_CONST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #6 BINARY_ADD')
+525: i45 = int_add(i36, 1)
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #7 RETURN_VALUE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #30 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #33 JUMP_ABSOLUTE')
+529: i46 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+537: i47 = int_lt(i46, 0)
guard_false(i47, descr=<Guard0x7fe7c995a728>) [p1, p0, p2, p3, p6, i45, None]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+547: jump(p0, p1, p2, p3, p6, i45, descr=TargetToken(140633495988848))
+555: --end of the loop--
[19c474bf9fca] jit-log-opt-loop}
[19c474c0e8bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb268 +0  E9C1010000
[19c474c103d6] jit-backend-dump}
[19c474c10960] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb2cf +0  E9C9010000
[19c474c1148a] jit-backend-dump}
[19c474c118f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb30d +0  E9FA010000
[19c474c122f5] jit-backend-dump}
[19c47509a4c2] {jit-backend
[19c475193ba8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb668 +0  4881EC9800000048896C24604889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B0425B07916034829E0483B0425109F0103760D49BBD6AB7FC9E77F000041FFD349BB68E167CCE77F00004D8B3B4D8D770149BB68E167CCE77F00004D89334C8BB5380100004D8BBE800000004D8B6E504D8B66704D0FB6968E0000004D8B4E604D8B4678498B7E58498B7668488B5E10488B5618488B4620488B4E284C89AD480100004C8B6E304C89BD500100004C898D580100004889BD600100004889956801000048898D700100004C89AD7801000049BB80E167CCE77F00004D8B2B498D4D0149BB80E167CCE77F000049890B4983F8030F85000000008138E82200000F85000000004C8B40104D85C00F8400000000488B48084D8B681041817D00685505000F85000000004D8B68084D8B4508498B5510498B7D184883F9000F8C000000004839F90F8D000000004989CD480FAFCA4D89C14901C8498D4D01488948084983FA000F85000000004883FB017206813B180C00000F850000000049BB38CF0CCAE77F00004D39DC0F85000000004C8B63084983C4010F8000000000488B1C25807816034883FB000F8C000000004C89856001000049BB98E167CCE77F00004D8B03498D580149BB98E167CCE77F000049891B4839F90F8D000000004889CB480FAFCA4D89C84901C9488D4B01488948084C89E34983C4010F8000000000488B1C25807816034883FB000F8C000000004C898D600100004D89C1E996FFFFFF49BBA8AE95C9E77F0000415349BB68B57FC9E77F0000415349BB00A07FC9E77F000041FFE349BB90E896C9E77F0000415349BB78B57FC9E77F0000415349BB00A07FC9E77F000041FFE349BBA0E796C9E77F0000415349BB88B57FC9E77F0000415349BB00A07FC9E77F000041FFE349BB28E796C9E77F0000415349BB98B57FC9E77F0000415349BB00A07FC9E77F000041FFE349BBB0E696C9E77F0000415349BBA8B57FC9E77F0000415349BB00A07FC9E77F000041FFE349BB38E696C9E77F0000415349BBB8B57FC9E77F0000415349BB00A07FC9E77F000041FFE349BBC0E596C9E77F0000415349BBC8B57FC9E77F0000415349BB00A07FC9E77F000041FFE349BB48E596C9E77F0000415349BBD8B57FC9E77F0000415349BB00A07FC9E77F000041FFE349BBD0E496C9E77F0000415349BBE8B57FC9E77F0000415349BB00A07FC9E77F000041FFE349BB58E496C9E77F0000415349BBF8B57FC9E77F0000415349BB00A07FC9E77F000041FFE349BBE0E396C9E77F0000415349BB08B67FC9E77F0000415349BB00A07FC9E77F000041FFE349BB68E396C9E77F0000415349BB18B67FC9E77F0000415349BB00A07FC9E77F000041FFE349BBF0E296C9E77F0000415349BB28B67FC9E77F0000415349BB00A07FC9E77F000041FFE349BB78E296C9E77F0000415349BB38B67FC9E77F0000415349BB00A07FC9E77F000041FFE349BB00E296C9E77F0000415349BB48B67FC9E77F0000415349BB00A07FC9E77F000041FFE349BB88E196C9E77F0000415349BB58B67FC9E77F0000415349BB00A07FC9E77F000041FFE3
[19c4751ab695] jit-backend-dump}
[19c4751ac131] {jit-backend-addr
Loop 2 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) has address 0x7fe7c97fb6b8 to 0x7fe7c97fb898 (bootstrap 0x7fe7c97fb668)
[19c4751ad6bf] jit-backend-addr}
[19c4751ae020] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb76d +0  27010000
[19c4751aef16] jit-backend-dump}
[19c4751af4c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb779 +0  40010000
[19c4751aff5c] jit-backend-dump}
[19c4751b03b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb786 +0  58010000
[19c4751b0dcc] jit-backend-dump}
[19c4751b122c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb79c +0  67010000
[19c4751b1b28] jit-backend-dump}
[19c4751b2047] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb7b6 +0  72010000
[19c4751b2928] jit-backend-dump}
[19c4751b2d6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb7bf +0  8E010000
[19c4751b36fb] jit-backend-dump}
[19c4751b3b61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb7de +0  94010000
[19c4751b440d] jit-backend-dump}
[19c4751b4852] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb7f0 +0  A7010000
[19c4751b5192] jit-backend-dump}
[19c4751b55cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb803 +0  B9010000
[19c4751b5ead] jit-backend-dump}
[19c4751b6304] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb811 +0  D0010000
[19c4751b6baa] jit-backend-dump}
[19c4751b71bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb823 +0  08020000
[19c4751b7aa9] jit-backend-dump}
[19c4751b7ec5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb851 +0  FF010000
[19c4751b87ca] jit-backend-dump}
[19c4751b8c15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb873 +0  02020000
[19c4751b94d6] jit-backend-dump}
[19c4751b99a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb885 +0  3A020000
[19c4751ba267] jit-backend-dump}
[19c4751bae3b] jit-backend}
[19c4751bbff8] {jit-log-opt-loop
# Loop 2 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) : loop with 74 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p20 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+183: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, descr=TargetToken(140633495989376))
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+255: guard_value(i7, 3, descr=<Guard0x7fe7c995aea8>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19]
+265: guard_class(p15, 26177128, descr=<Guard0x7fe7c996e890>) [p1, p0, p15, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+277: p23 = getfield_gc(p15, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+281: guard_nonnull(p23, descr=<Guard0x7fe7c996e7a0>) [p1, p0, p15, p23, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+290: i24 = getfield_gc(p15, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+294: p25 = getfield_gc(p23, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+298: guard_class(p25, 26517736, descr=<Guard0x7fe7c996e728>) [p1, p0, p15, i24, p25, p23, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+312: p27 = getfield_gc(p23, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+316: i28 = getfield_gc_pure(p27, descr=<FieldS tuple3.item0 8>)
+320: i29 = getfield_gc_pure(p27, descr=<FieldS tuple3.item1 16>)
+324: i30 = getfield_gc_pure(p27, descr=<FieldS tuple3.item2 24>)
+328: i32 = int_lt(i24, 0)
guard_false(i32, descr=<Guard0x7fe7c996e6b0>) [p1, p0, p15, i24, i30, i29, i28, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+338: i33 = int_ge(i24, i30)
guard_false(i33, descr=<Guard0x7fe7c996e638>) [p1, p0, p15, i24, i29, i28, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+347: i34 = int_mul(i24, i29)
+354: i35 = int_add(i28, i34)
+360: i37 = int_add(i24, 1)
+364: setfield_gc(p15, i37, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+368: guard_value(i5, 0, descr=<Guard0x7fe7c996e5c0>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p19, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
+378: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard0x7fe7c996e548>) [p1, p0, p11, p2, p3, p4, p6, p15, p19, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
+396: guard_value(p4, ConstPtr(ptr40), descr=<Guard0x7fe7c996e4d0>) [p1, p0, p4, p2, p3, p6, p11, p15, p19, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+415: i41 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+419: i43 = int_add_ovf(i41, 1)
guard_no_overflow(descr=<Guard0x7fe7c996e458>) [p1, p0, p11, i43, p2, p3, p6, p15, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+429: guard_not_invalidated(descr=<Guard0x7fe7c996e3e0>) [p1, p0, p2, p3, p6, p15, i43, i35]
+429: i45 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+437: i47 = int_lt(i45, 0)
guard_false(i47, descr=<Guard0x7fe7c996e368>) [p1, p0, p2, p3, p6, p15, i43, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+447: label(p0, p1, p2, p3, p6, i43, i35, p15, i37, i30, i29, i28, descr=TargetToken(140633495989464))
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+484: i48 = int_ge(i37, i30)
guard_false(i48, descr=<Guard0x7fe7c996e2f0>) [p1, p0, p15, i37, i29, i28, p2, p3, p6, i35, i43]
+493: i49 = int_mul(i37, i29)
+500: i50 = int_add(i28, i49)
+506: i51 = int_add(i37, 1)
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+510: setfield_gc(p15, i51, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+514: i52 = int_add_ovf(i43, 1)
guard_no_overflow(descr=<Guard0x7fe7c996e278>) [p1, p0, i52, p2, p3, p6, p15, i50, None, i43]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+527: guard_not_invalidated(descr=<Guard0x7fe7c996e200>) [p1, p0, p2, p3, p6, p15, i52, i50, None, None]
+527: i54 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+535: i55 = int_lt(i54, 0)
guard_false(i55, descr=<Guard0x7fe7c996e188>) [p1, p0, p2, p3, p6, p15, i52, i50, None, None]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+545: jump(p0, p1, p2, p3, p6, i52, i50, p15, i51, i30, i29, i28, descr=TargetToken(140633495989464))
+560: --end of the loop--
[19c475204f61] jit-log-opt-loop}
[19c47566fb6c] {jit-backend
[19c47596b738] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbc
[19c475978b13] jit-backend-dump}
[19c47597933f] {jit-backend-addr
Loop 3 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) has address 0x7fe7c97fbc58 to 0x7fe7c97fbe77 (bootstrap 0x7fe7c97fbc08)
[19c47597a484] jit-backend-addr}
[19c47597acbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbd02 +0  71010000
[19c475989294] jit-backend-dump}
[19c475989b43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbd14 +0  84010000
[19c47598a8c3] jit-backend-dump}
[19c47598ae17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbd1e +0  9F010000
[19c47598b818] jit-backend-dump}
[19c47598bc6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbd31 +0  B1010000
[19c47598c665] jit-backend-dump}
[19c47598cacb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbd42 +0  C5010000
[19c47598d49a] jit-backend-dump}
[19c47598d8fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbd55 +0  D7010000
[19c47598e2a2] jit-backend-dump}
[19c47598e6f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbd8d +0  C4010000
[19c47598f0d7] jit-backend-dump}
[19c47598f58b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbd9f +0  D7010000
[19c47598ff0c] jit-backend-dump}
[19c475990358] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbdad +0  EE010000
[19c475990cbc] jit-backend-dump}
[19c475991353] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbdca +0  1B020000
[19c475991cea] jit-backend-dump}
[19c47599220b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbdf6 +0  14020000
[19c475992b2e] jit-backend-dump}
[19c47599305b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbe09 +0  26020000
[19c475993ac7] jit-backend-dump}
[19c475993f4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbe40 +0  14020000
[19c47599496a] jit-backend-dump}
[19c475994dad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbe51 +0  28020000
[19c4759956f9] jit-backend-dump}
[19c475995c29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbe6e +0  55020000
[19c4759965b1] jit-backend-dump}
[19c4759972b1] jit-backend}
[19c475998fc1] {jit-log-opt-loop
# Loop 3 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) : loop with 93 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p18 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, descr=TargetToken(140633495990080))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+244: guard_value(i7, 2, descr=<Guard0x7fe7c996e980>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17]
+254: guard_nonnull_class(p13, ConstClass(W_IntObject), descr=<Guard0x7fe7c996f9e8>) [p1, p0, p13, p2, p3, p4, i5, p6, p11, p15, p17]
+272: guard_value(i5, 0, descr=<Guard0x7fe7c996f970>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p17]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
+282: guard_value(p4, ConstPtr(ptr22), descr=<Guard0x7fe7c996f8f8>) [p1, p0, p4, p2, p3, p6, p11, p13, p17]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+301: i23 = getfield_gc_pure(p13, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+305: i25 = int_lt(i23, 10000)
guard_true(i25, descr=<Guard0x7fe7c996f880>) [p1, p0, p13, p2, p3, p6, p11]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+318: i27 = int_eq(i23, -9223372036854775808)
guard_false(i27, descr=<Guard0x7fe7c996f808>) [p1, p0, p13, i23, p2, p3, p6, p11]
+337: i29 = int_mod(i23, 2)
+364: i31 = int_rshift(i29, 63)
+371: i32 = int_and(2, i31)
+380: i33 = int_add(i29, i32)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+383: i34 = int_is_true(i33)
guard_false(i34, descr=<Guard0x7fe7c996f790>) [p1, p0, p2, p3, p6, p11, p13, i33]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
+393: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard0x7fe7c996f718>) [p1, p0, p11, p2, p3, p6, p13, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+411: i37 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+415: i39 = int_add_ovf(i37, 1)
guard_no_overflow(descr=<Guard0x7fe7c996f6a0>) [p1, p0, p11, i39, p2, p3, p6, p13, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+425: i41 = int_add(i23, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+436: guard_not_invalidated(descr=<Guard0x7fe7c996f628>) [p1, p0, p2, p3, p6, i39, i41, None]
+436: i43 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+444: i45 = int_lt(i43, 0)
guard_false(i45, descr=<Guard0x7fe7c996f5b0>) [p1, p0, p2, p3, p6, i39, i41, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+454: label(p0, p1, p2, p3, p6, i39, i41, descr=TargetToken(140633495990168))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+485: i46 = int_lt(i41, 10000)
guard_true(i46, descr=<Guard0x7fe7c996f538>) [p1, p0, p2, p3, p6, i39, i41]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+498: i47 = int_eq(i41, -9223372036854775808)
guard_false(i47, descr=<Guard0x7fe7c996f4c0>) [p1, p0, i41, p2, p3, p6, i39, None]
+517: i48 = int_mod(i41, 2)
+544: i49 = int_rshift(i48, 63)
+551: i50 = int_and(2, i49)
+559: i51 = int_add(i48, i50)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+562: i52 = int_is_true(i51)
guard_false(i52, descr=<Guard0x7fe7c996f448>) [p1, p0, p2, p3, p6, i51, i39, i41]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+572: i53 = int_add_ovf(i39, 1)
guard_no_overflow(descr=<Guard0x7fe7c996f3d0>) [p1, p0, i53, p2, p3, p6, None, i39, i41]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+589: i54 = int_add(i41, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+600: guard_not_invalidated(descr=<Guard0x7fe7c996f358>) [p1, p0, p2, p3, p6, i54, i53, None, None, None]
+600: i55 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+608: i56 = int_lt(i55, 0)
guard_false(i56, descr=<Guard0x7fe7c996f2e0>) [p1, p0, p2, p3, p6, i54, i53, None, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+618: jump(p0, p1, p2, p3, p6, i53, i54, descr=TargetToken(140633495990168))
+623: --end of the loop--
[19c4759ebff6] jit-log-opt-loop}
[19c475ad90fd] {jit-backend
[19c475b60e23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc
[19c475b67831] jit-backend-dump}
[19c475b68364] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc134 +0  22000000
[19c475b68e8f] jit-backend-dump}
[19c475b693cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc13f +0  22000000
[19c475b69e25] jit-backend-dump}
[19c475b6a3f6] {jit-backend-addr
bridge out of Guard 0x7fe7c996e2f0 has address 0x7fe7c97fc130 to 0x7fe7c97fc33d
[19c475b6b2b4] jit-backend-addr}
[19c475b6b864] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc199 +0  A0010000
[19c475b6c292] jit-backend-dump}
[19c475b6c766] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc1a2 +0  BC010000
[19c475b6d09d] jit-backend-dump}
[19c475b6d7ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fb851 +0  DB080000
[19c475b6e130] jit-backend-dump}
[19c475b6ea53] jit-backend}
[19c475b6f6d9] {jit-log-opt-bridge
# bridge out of Guard 0x7fe7c996e2f0 with 28 ops
[p0, p1, p2, i3, i4, i5, p6, p7, p8, i9, i10]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #38 POP_BLOCK')
+76: p11 = getfield_gc_pure(p8, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+87: i12 = getfield_gc_pure(p8, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+91: setfield_gc(p2, ConstPtr(ptr13), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+99: guard_value(i12, 2, descr=<Guard0x7fe7c996fc40>) [p0, p1, i12, p6, p7, p11, i10, i9]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #39 LOAD_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #42 RETURN_VALUE')
+109: guard_isnull(p11, descr=<Guard0x7fe7cc546098>) [p0, p1, p11, p6, p7, i10, i9]
+118: p15 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+129: p16 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
p18 = new_with_vtable(ConstClass(W_IntObject))
+193: setfield_gc(p1, 1, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_frame_finished_execution 141>)
setfield_gc(p1, p6, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
setfield_gc(p1, p7, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
setfield_gc(p1, ConstPtr(ptr20), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+306: setfield_gc(p1, 0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+314: setfield_gc(p1, ConstPtr(ptr22), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+322: setfield_gc(p1, 2, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+330: setfield_gc(p1, 42, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
setarrayitem_gc(p15, 0, p18, descr=<ArrayP 8>)
p27 = new_with_vtable(ConstClass(W_IntObject))
+381: setfield_gc(p27, i9, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
setarrayitem_gc(p15, 1, p27, descr=<ArrayP 8>)
+424: setarrayitem_gc(p15, 2, ConstPtr(ptr30), descr=<ArrayP 8>)
+432: setarrayitem_gc(p15, 3, ConstPtr(ptr32), descr=<ArrayP 8>)
+440: setarrayitem_gc(p15, 4, ConstPtr(ptr32), descr=<ArrayP 8>)
+448: setfield_gc(p18, i10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+452: finish(p18, descr=<DoneWithThisFrameDescrRef object at 0x1ea4280>)
+525: --end of the loop--
[19c475b92846] jit-log-opt-bridge}
[19c47608ae49] {jit-backend
[19c47620d562] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc
[19c4762283c4] jit-backend-dump}
[19c476229554] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc56c +0  26000000
[19c47622a4ac] jit-backend-dump}
[19c47622a9be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc577 +0  26000000
[19c47622b445] jit-backend-dump}
[19c47622b967] {jit-backend-addr
bridge out of Guard 0x7fe7c996f448 has address 0x7fe7c97fc568 to 0x7fe7c97fca92
[19c47622c725] jit-backend-addr}
[19c47622ce57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc5ce +0  C0040000
[19c47622d7fc] jit-backend-dump}
[19c47622ddfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc5e5 +0  CE040000
[19c47622e73d] jit-backend-dump}
[19c47622ed4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc62b +0  D2040000
[19c47622f6b6] jit-backend-dump}
[19c47622faf5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc639 +0  E9040000
[19c4762303fd] jit-backend-dump}
[19c476230872] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc64e +0  1E050000
[19c476231192] jit-backend-dump}
[19c4762315d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc660 +0  31050000
[19c476231eb5] jit-backend-dump}
[19c4762322c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc918 +0  9E020000
[19c476232b8c] jit-backend-dump}
[19c476232fec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc927 +0  B4020000
[19c476233926] jit-backend-dump}
[19c476233d6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc93b +0  C5020000
[19c476236834] jit-backend-dump}
[19c476236d7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc958 +0  CD020000
[19c47623773c] jit-backend-dump}
[19c476237b4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc989 +0  C1020000
[19c476238442] jit-backend-dump}
[19c476238835] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc9a4 +0  CB020000
[19c476239131] jit-backend-dump}
[19c476239535] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc9b8 +0  DC020000
[19c476239e16] jit-backend-dump}
[19c47623a220] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc9c9 +0  F0020000
[19c47623aae9] jit-backend-dump}
[19c47623b4a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc9db +0  28030000
[19c47623bddb] jit-backend-dump}
[19c47623c1eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fca06 +0  22030000
[19c47623ca8a] jit-backend-dump}
[19c47623ce89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fca19 +0  34030000
[19c47623d73a] jit-backend-dump}
[19c47623db4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fca50 +0  22030000
[19c47623e458] jit-backend-dump}
[19c47623e859] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fca61 +0  36030000
[19c47623f149] jit-backend-dump}
[19c47623f5ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fca7e +0  63030000
[19c47623fe90] jit-backend-dump}
[19c4762406c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbe40 +0  24070000
[19c476240faf] jit-backend-dump}
[19c476241c2f] jit-backend}
[19c476242fb5] {jit-log-opt-bridge
# bridge out of Guard 0x7fe7c996f448 with 137 ops
[p0, p1, p2, p3, p4, i5, i6, i7]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #37 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #40 LOAD_GLOBAL')
+76: p8 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+87: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x7fe7cc546278>) [p0, p1, p8, p2, p3, p4, i6, i7]
+106: p10 = getfield_gc(p8, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+110: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x7fe7cc567358>) [p0, p1, p10, p8, p2, p3, p4, i6, i7]
+129: guard_not_invalidated(descr=<Guard0x7fe7cc5672e0>) [p0, p1, p8, p2, p3, p4, i6, i7]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #43 CALL_FUNCTION')
+129: p13 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+179: p14 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+183: p15 = force_token()
+186: p16 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+190: guard_isnull(p16, descr=<Guard0x7fe7cc567268>) [p0, p1, p13, p16, p2, p3, p4, p14, p15, i6, i7]
+199: i17 = getfield_gc(p13, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+203: i18 = int_is_zero(i17)
guard_true(i18, descr=<Guard0x7fe7cc5671f0>) [p0, p1, p13, p2, p3, p4, p14, p15, i6, i7]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #0 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #3 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #6 SETUP_LOOP')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #9 LOAD_GLOBAL')
+213: guard_not_invalidated(descr=<Guard0x7fe7cc567178>) [p0, p1, p13, p2, p3, p4, p14, p15, i6, i7]
+213: p20 = getfield_gc(ConstPtr(ptr19), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+221: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x7fe7cc567100>) [p0, p1, p13, p20, p2, p3, p4, p14, p15, i6, i7]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #12 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #15 CALL_FUNCTION')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #18 GET_ITER')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+234: i23 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+242: i25 = int_lt(i23, 0)
guard_false(i25, descr=<Guard0x7fe7cc567088>) [p0, p1, p13, p2, p3, p4, p14, p15, i6, i7]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+252: p26 = force_token()
p28 = new_with_vtable(26266048)
p30 = new_array(5, descr=<ArrayP 8>)
p32 = new_with_vtable(ConstClass(W_IntObject))
p34 = new_with_vtable(ConstClass(W_IntObject))
p36 = new_with_vtable(26177128)
p38 = new_with_vtable(ConstClass(W_ListObject))
p40 = new_array(0, descr=<ArrayP 8>)
p42 = new_with_vtable(26169752)
+427: setfield_gc(p42, p15, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p13, p42, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p1, p26, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+495: setfield_gc(p32, 1, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+504: setarrayitem_gc(p30, 0, p32, descr=<ArrayP 8>)
+508: setarrayitem_gc(p30, 1, p34, descr=<ArrayP 8>)
+512: setfield_gc(p38, ConstPtr(ptr46), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+526: setfield_gc(p38, ConstPtr(ptr47), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+534: setfield_gc(p36, p38, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+538: setfield_gc(p36, 1, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+546: setarrayitem_gc(p30, 2, p36, descr=<ArrayP 8>)
+550: setfield_gc(p28, p30, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+554: setfield_gc(p28, 3, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+562: setfield_gc(p28, ConstPtr(ptr51), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+576: setfield_gc(p28, p14, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+580: setfield_gc(p28, 19, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+588: setfield_gc(p28, p40, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+592: setfield_gc(p28, 21, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_f_lineno 136>)
+602: setfield_gc(p28, ConstPtr(ptr9), descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+616: setfield_gc(p28, ConstPtr(ptr54), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
p55 = call_assembler(p28, p13, descr=<Loop2>)
guard_not_forced(descr=<Guard0x7fe7cc564c20>) [p0, p1, p13, p28, p55, p42, p2, p3, p4, i6, i7]
+948: keepalive(p28)
+948: guard_no_exception(descr=<Guard0x7fe7cc567010>) [p0, p1, p13, p28, p55, p42, p2, p3, p4, i6, i7]
+963: p56 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+974: guard_isnull(p56, descr=<Guard0x7fe7cc566f98>) [p0, p1, p55, p13, p28, p56, p42, p2, p3, p4, i6, i7]
+983: i57 = getfield_gc(p13, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+987: setfield_gc(p28, ConstPtr(ptr58), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+1002: i59 = int_is_true(i57)
guard_false(i59, descr=<Guard0x7fe7cc566f20>) [p0, p1, p55, p28, p13, p42, p2, p3, p4, i6, i7]
+1012: p60 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+1016: p61 = getfield_gc(p28, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+1020: i62 = getfield_gc(p28, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_escaped 140>)
setfield_gc(p13, p61, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+1052: guard_false(i62, descr=<Guard0x7fe7cc566ea8>) [p0, p1, p55, p60, p28, p13, p42, p2, p3, p4, i6, i7]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #46 INPLACE_ADD')
+1061: setfield_gc(p42, ConstPtr(ptr63), descr=<FieldP JitVirtualRef.virtual_token 8>)
+1076: guard_class(p55, ConstClass(W_IntObject), descr=<Guard0x7fe7cc566e30>) [p0, p1, p55, p2, p3, p4, i6, i7]
+1088: i65 = getfield_gc_pure(p55, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+1092: i66 = int_add_ovf(i6, i65)
guard_no_overflow(descr=<Guard0x7fe7cc566db8>) [p0, p1, p55, i66, p2, p3, p4, i6, i7]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #50 JUMP_FORWARD')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+1108: i68 = int_add_ovf(i7, 1)
guard_no_overflow(descr=<Guard0x7fe7cc566d40>) [p0, p1, i68, p2, p3, p4, i66, None, i7]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+1125: guard_not_invalidated(descr=<Guard0x7fe7cc566cc8>) [p0, p1, p2, p3, p4, i68, i66, None, None]
+1125: i71 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+1133: i73 = int_lt(i71, 0)
guard_false(i73, descr=<Guard0x7fe7cc566c50>) [p0, p1, p2, p3, p4, i68, i66, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+1143: label(p1, p0, p2, p3, p4, i66, i68, descr=TargetToken(140633495991488))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+1173: i75 = int_lt(i68, 10000)
guard_true(i75, descr=<Guard0x7fe7cc566bd8>) [p0, p1, p2, p3, p4, i66, i68]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+1186: i77 = int_eq(i68, -9223372036854775808)
guard_false(i77, descr=<Guard0x7fe7cc566b60>) [p0, p1, i68, p2, p3, p4, i66, None]
+1205: i79 = int_mod(i68, 2)
+1232: i81 = int_rshift(i79, 63)
+1239: i82 = int_and(2, i81)
+1247: i83 = int_add(i79, i82)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+1250: i84 = int_is_true(i83)
guard_false(i84, descr=<Guard0x7fe7cc566ae8>) [p0, p1, p2, p3, p4, i83, i66, i68]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+1260: i86 = int_add_ovf(i66, 1)
guard_no_overflow(descr=<Guard0x7fe7cc566a70>) [p0, p1, i86, p2, p3, p4, None, i66, i68]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+1277: i88 = int_add(i68, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+1288: guard_not_invalidated(descr=<Guard0x7fe7cc5669f8>) [p0, p1, p2, p3, p4, i86, i88, None, None, None]
+1288: i90 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+1296: i92 = int_lt(i90, 0)
guard_false(i92, descr=<Guard0x7fe7cc566980>) [p0, p1, p2, p3, p4, i86, i88, None, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+1306: jump(p1, p0, p2, p3, p4, i86, i88, descr=TargetToken(140633495990168))
+1322: --end of the loop--
[19c4762c0a61] jit-log-opt-bridge}
[19c476497d1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbdbc +0  E903020000
[19c47649be73] jit-backend-dump}
[19c47649c3b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fbe60 +0  E93D020000
[19c47649ce6f] jit-backend-dump}
[19c47649d42e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc5e9 +0  E9EE040000
[19c47649e0fb] jit-backend-dump}
[19c47649e5b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc63d +0  E909050000
[19c47649efa7] jit-backend-dump}
[19c47649f437] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fc9cd +0  E910030000
[19c47649fddf] jit-backend-dump}
[19c4764a029c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fca70 +0  E94B030000
[19c4764a0c44] jit-backend-dump}
[19c476926513] {jit-backend
[19c4769db8ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fcfb
[19c4769f7c0c] jit-backend-dump}
[19c4769f86fe] {jit-backend-addr
Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) has address 0x7fe7c97fd000 to 0x7fe7c97fd449 (bootstrap 0x7fe7c97fcfb0)
[19c4769f9afa] jit-backend-addr}
[19c4769fa4b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd0e4 +0  61030000
[19c4769fb2d8] jit-backend-dump}
[19c4769fb916] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd0f8 +0  72030000
[19c4769fc368] jit-backend-dump}
[19c4769fc7d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd105 +0  8A030000
[19c4769fd141] jit-backend-dump}
[19c4769fd58f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd119 +0  9B030000
[19c4769fdf05] jit-backend-dump}
[19c4769fe36b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd133 +0  A6030000
[19c4769fec55] jit-backend-dump}
[19c4769ff071] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd13c +0  C2030000
[19c4769ff94f] jit-backend-dump}
[19c4769ffd80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd15b +0  C8030000
[19c476a006ea] jit-backend-dump}
[19c476a00b26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd16e +0  DA030000
[19c476a01413] jit-backend-dump}
[19c476a0183b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd185 +0  E8030000
[19c476a0210a] jit-backend-dump}
[19c476a02535] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd19d +0  F5030000
[19c476a02dba] jit-backend-dump}
[19c476a0345e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd1b2 +0  2A040000
[19c476a03d83] jit-backend-dump}
[19c476a041c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd212 +0  EF030000
[19c476a04af7] jit-backend-dump}
[19c476a04fe6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd22a +0  FC030000
[19c476a058d0] jit-backend-dump}
[19c476a05cf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd292 +0  B9030000
[19c476a06592] jit-backend-dump}
[19c476a069d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd2eb +0  85030000
[19c476a096d4] jit-backend-dump}
[19c476a09f21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd312 +0  83030000
[19c476a0a999] jit-backend-dump}
[19c476a0aeb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd381 +0  5E030000
[19c476a0b824] jit-backend-dump}
[19c476a0bc29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd3e2 +0  22030000
[19c476a0c4e6] jit-backend-dump}
[19c476a0c908] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd439 +0  F0020000
[19c476a0d199] jit-backend-dump}
[19c476a0dc73] jit-backend}
[19c476a0eef1] {jit-log-opt-loop
# Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) : loop with 101 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p21 = getarrayitem_gc(p9, 5, descr=<ArrayP 8>)
+194: p23 = getarrayitem_gc(p9, 6, descr=<ArrayP 8>)
+205: p25 = getarrayitem_gc(p9, 7, descr=<ArrayP 8>)
+216: p26 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+216: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, descr=TargetToken(140633495992456))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+302: guard_value(i7, 5, descr=<Guard0x7fe7cc57d8f8>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19, p21, p23, p25]
+312: guard_class(p19, 26177128, descr=<Guard0x7fe7cc57d010>) [p1, p0, p19, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+332: p29 = getfield_gc(p19, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+336: guard_nonnull(p29, descr=<Guard0x7fe7cc57d088>) [p1, p0, p19, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+345: i30 = getfield_gc(p19, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+349: p31 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+353: guard_class(p31, 26517736, descr=<Guard0x7fe7cc57cf98>) [p1, p0, p19, i30, p31, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+365: p33 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+369: i34 = getfield_gc_pure(p33, descr=<FieldS tuple3.item0 8>)
+373: i35 = getfield_gc_pure(p33, descr=<FieldS tuple3.item1 16>)
+377: i36 = getfield_gc_pure(p33, descr=<FieldS tuple3.item2 24>)
+381: i38 = int_lt(i30, 0)
guard_false(i38, descr=<Guard0x7fe7cc57d880>) [p1, p0, p19, i30, i36, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+391: i39 = int_ge(i30, i36)
guard_false(i39, descr=<Guard0x7fe7cc57d808>) [p1, p0, p19, i30, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+400: i40 = int_mul(i30, i35)
+407: i41 = int_add(i34, i40)
+413: i43 = int_add(i30, 1)
+417: setfield_gc(p19, i43, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+421: guard_value(i5, 0, descr=<Guard0x7fe7cc57d790>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+431: guard_value(p4, ConstPtr(ptr45), descr=<Guard0x7fe7cc57d6a0>) [p1, p0, p4, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+450: p46 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+454: guard_value(p46, ConstPtr(ptr47), descr=<Guard0x7fe7cc57d5b0>) [p1, p0, p46, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+473: p48 = getfield_gc(p46, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+478: guard_value(p48, ConstPtr(ptr49), descr=<Guard0x7fe7cc57d538>) [p1, p0, p48, p46, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+497: guard_not_invalidated(descr=<Guard0x7fe7cc57d448>) [p1, p0, p46, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+497: p51 = getfield_gc(ConstPtr(ptr50), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+505: guard_value(p51, ConstPtr(ptr52), descr=<Guard0x7fe7cc57d358>) [p1, p0, p51, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+518: p54 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i41, descr=<Callr 8 i EF=3>)
+599: guard_no_exception(descr=<Guard0x7fe7cc57d2e0>) [p1, p0, p54, p2, p3, p6, p13, p15, p17, p19, p25, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+614: p55 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+625: guard_class(p55, 26402504, descr=<Guard0x7fe7cc57d100>) [p1, p0, p55, p17, p2, p3, p6, p13, p15, p19, p25, p54, i41]
+638: p57 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+642: i58 = getfield_gc(p57, descr=<FieldS list.length 8>)
+646: i60 = int_add(i58, 1)
+650: p61 = getfield_gc(p57, descr=<FieldP list.items 16>)
+650: i62 = arraylen_gc(p61, descr=<ArrayP 8>)
+650: call(ConstClass(_ll_list_resize_ge_trampoline__v1053___simple_call__function_), p57, i60, descr=<Callv 0 ri EF=4>)
+727: guard_no_exception(descr=<Guard0x7fe7cc57d268>) [p1, p0, i58, p54, p57, p2, p3, p6, p13, p15, p17, p19, p25, None, i41]
+742: p65 = getfield_gc(p57, descr=<FieldP list.items 16>)
setarrayitem_gc(p65, i58, p54, descr=<ArrayP 8>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+813: i67 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+821: i69 = int_lt(i67, 0)
guard_false(i69, descr=<Guard0x7fe7cc57d1f0>) [p1, p0, p2, p3, p6, p13, p15, p17, p19, p25, None, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+831: p70 = same_as(ConstPtr(ptr49))
+831: label(p0, p1, p2, p3, p6, i41, p13, p15, p17, p19, p25, i43, i36, i35, i34, p57, descr=TargetToken(140633495992368))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+861: i71 = int_ge(i43, i36)
guard_false(i71, descr=<Guard0x7fe7cc57cc50>) [p1, p0, p19, i43, i35, i34, p2, p3, p6, p13, p15, p17, p25, i41]
+870: i72 = int_mul(i43, i35)
+881: i73 = int_add(i34, i72)
+891: i74 = int_add(i43, 1)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+895: setfield_gc(p19, i74, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+906: guard_not_invalidated(descr=<Guard0x7fe7cc57c908>) [p1, p0, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+906: p75 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i73, descr=<Callr 8 i EF=3>)
+966: guard_no_exception(descr=<Guard0x7fe7cc5673d0>) [p1, p0, p75, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+981: i76 = getfield_gc(p57, descr=<FieldS list.length 8>)
+992: i77 = int_add(i76, 1)
+996: p78 = getfield_gc(p57, descr=<FieldP list.items 16>)
+996: i79 = arraylen_gc(p78, descr=<ArrayP 8>)
+996: call(ConstClass(_ll_list_resize_ge_trampoline__v1053___simple_call__function_), p57, i77, descr=<Callv 0 ri EF=4>)
+1063: guard_no_exception(descr=<Guard0x7fe7cc57d9e8>) [p1, p0, i76, p75, p57, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
+1078: p80 = getfield_gc(p57, descr=<FieldP list.items 16>)
setarrayitem_gc(p80, i76, p75, descr=<ArrayP 8>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+1147: i81 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+1155: i82 = int_lt(i81, 0)
guard_false(i82, descr=<Guard0x7fe7cc57da60>) [p1, p0, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+1165: jump(p0, p1, p2, p3, p6, i73, p13, p15, p17, p19, p25, i74, i36, i35, i34, p57, descr=TargetToken(140633495992368))
+1177: --end of the loop--
[19c476a8c8cf] jit-log-opt-loop}
[19c476f1a146] {jit-backend
[19c476fb0eb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd778 +0  4881EC9800000048896C24604889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B0425B07916034829E0483B0425109F0103760D49BBD6AB7FC9E77F000041FFD349BB88E267CCE77F00004D8B3B4D8D770149BB88E267CCE77F00004D89334C8BB5400100004D8B7E404C8BAD380100004F0FB6642F184983FC330F85000000004D8D65014D89661849C74620000000004D896E2848C745580100000048C7451000C6FA0148C74520000000004889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C349BBF00259CCE77F0000415349BB68D77FC9E77F0000415349BB00A07FC9E77F000041FFE3
[19c476fb8acd] jit-backend-dump}
[19c476fb9501] {jit-backend-addr
Loop 5 (re StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) has address 0x7fe7c97fd7c8 to 0x7fe7c97fd863 (bootstrap 0x7fe7c97fd778)
[19c476fbab8f] jit-backend-addr}
[19c476fbb7bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd804 +0  5B000000
[19c476fbc83d] jit-backend-dump}
[19c476fbd4b4] jit-backend}
[19c476fbec53] {jit-log-opt-loop
# Loop 5 (re StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) : entry bridge with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+110: p2 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+121: i3 = strgetitem(p2, i0)
+134: i5 = int_eq(i3, 51)
guard_true(i5, descr=<Guard0x7fe7cc5902f0>) [i0, p1]
+144: i7 = int_add(i0, 1)
+148: setfield_gc(p1, i7, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+152: setfield_gc(p1, ConstPtr(ptr8), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+160: setfield_gc(p1, i0, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+164: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+235: --end of the loop--
[19c476fd6fb4] jit-log-opt-loop}
[19c477229d40] {jit-backend
[19c47726a154] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd8c
[19c47727826a] jit-backend-dump}
[19c477278fc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd8cc +0  1C000000
[19c477279d40] jit-backend-dump}
[19c47727a217] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd8d7 +0  1C000000
[19c47727ab6f] jit-backend-dump}
[19c47727b0b4] {jit-backend-addr
bridge out of Guard 0x7fe7cc5902f0 has address 0x7fe7c97fd8c8 to 0x7fe7c97fd98e
[19c47727be22] jit-backend-addr}
[19c47727c513] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd921 +0  69000000
[19c47727ce56] jit-backend-dump}
[19c47727d5d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd935 +0  7A000000
[19c47727deef] jit-backend-dump}
[19c47727e32c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd943 +0  91000000
[19c47727ec22] jit-backend-dump}
[19c47727f5b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd804 +0  C0000000
[19c47727fecc] jit-backend-dump}
[19c477280917] jit-backend}
[19c4772814a7] {jit-log-opt-bridge
# bridge out of Guard 0x7fe7cc5902f0 with 13 ops
[i0, p1]
+76: i3 = int_add(i0, 1)
+80: i4 = getfield_gc_pure(p1, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+84: i5 = int_lt(i3, i4)
guard_true(i5, descr=<Guard0x7fe7cc590980>) [i3, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+93: p6 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+97: i7 = strgetitem(p6, i3)
+103: i9 = int_eq(i7, 51)
guard_false(i9, descr=<Guard0x7fe7cc590bd8>) [i3, p1]
+113: i11 = int_add(i3, 1)
+118: i12 = int_lt(i11, i4)
guard_false(i12, descr=<Guard0x7fe7cc590b60>) [i11, p1]
+127: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+198: --end of the loop--
[19c47728e83a] jit-log-opt-bridge}
[19c4775d7810] {jit-backend
[19c47760e455] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fda
[19c4776123ca] jit-backend-dump}
[19c477612cb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fda34 +0  1C000000
[19c47761382f] jit-backend-dump}
[19c477613ce8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fda3f +0  1C000000
[19c477614643] jit-backend-dump}
[19c477614b8b] {jit-backend-addr
bridge out of Guard 0x7fe7cc590b60 has address 0x7fe7c97fda30 to 0x7fe7c97fdae8
[19c477615712] jit-backend-addr}
[19c477615cd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fda8c +0  58000000
[19c4776165af] jit-backend-dump}
[19c477616a53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fda9d +0  6C000000
[19c477617334] jit-backend-dump}
[19c477617970] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd943 +0  E9000000
[19c4776182ec] jit-backend-dump}
[19c477618b2c] jit-backend}
[19c47761952e] {jit-log-opt-bridge
# bridge out of Guard 0x7fe7cc590b60 with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+76: p2 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+80: i3 = strgetitem(p2, i0)
+86: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard0x7fe7cc590cc8>) [i0, p1]
+96: i7 = int_add(i0, 1)
+100: i8 = getfield_gc_pure(p1, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+104: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard0x7fe7cc590e30>) [i7, p1]
+113: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+184: --end of the loop--
[19c47762a4d8] jit-log-opt-bridge}
[19c4779ba3b5] {jit-backend
[19c4779c4e23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fdb48 +0  48817D50FFFFFF007D2448C7442408FFFFFF0049BB38DB7FC9E77F00004C891C2449BB75A27FC9E77F000041FFD349BBD0E267CCE77F00004D8B334D8D660149BBD0E267CCE77F00004D892348C745580000000048C7451000C6FA0148C74520000000004889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[19c4779c7a68] jit-backend-dump}
[19c4779c8077] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fdb4c +0  1C000000
[19c4779c8a6c] jit-backend-dump}
[19c4779c8ecc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fdb57 +0  1C000000
[19c4779c97da] jit-backend-dump}
[19c4779c9cd8] {jit-backend-addr
bridge out of Guard 0x7fe7cc590980 has address 0x7fe7c97fdb48 to 0x7fe7c97fdbdb
[19c4779ca72f] jit-backend-addr}
[19c4779cad65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd921 +0  23020000
[19c4779cb65e] jit-backend-dump}
[19c4779cbe34] jit-backend}
[19c4779cc593] {jit-log-opt-bridge
# bridge out of Guard 0x7fe7cc590980 with 1 ops
[i0, p1]
+76: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+147: --end of the loop--
[19c4779cf1f8] jit-log-opt-bridge}
[19c47852861b] {jit-backend
[19c478828bc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe
[19c47887cec9] jit-backend-dump}
[19c47887da6d] {jit-backend-addr
Loop 6 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) has address 0x7fe7c97fe1d0 to 0x7fe7c97fef38 (bootstrap 0x7fe7c97fe180)
[19c47887f101] jit-backend-addr}
[19c47887fbf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe2b4 +0  800C0000
[19c478880d62] jit-backend-dump}
[19c47888139d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe2c8 +0  910C0000
[19c478881e63] jit-backend-dump}
[19c47888236f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe2d5 +0  A90C0000
[19c478882d5f] jit-backend-dump}
[19c4788831d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe2ea +0  B90C0000
[19c478883ae5] jit-backend-dump}
[19c478883f77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe2fb +0  CD0C0000
[19c47888485c] jit-backend-dump}
[19c478884d5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe30d +0  E00C0000
[19c478885643] jit-backend-dump}
[19c478885a8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe31f +0  F30C0000
[19c47888635e] jit-backend-dump}
[19c4788867a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe332 +0  050D0000
[19c4788870db] jit-backend-dump}
[19c478887509] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe351 +0  0B0D0000
[19c478887ddb] jit-backend-dump}
[19c47888825c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe368 +0  190D0000
[19c478888b81] jit-backend-dump}
[19c4788892c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe388 +0  430D0000
[19c478889b74] jit-backend-dump}
[19c478889fda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe3d5 +0  1B0D0000
[19c47888a98e] jit-backend-dump}
[19c47888adf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe3e3 +0  320D0000
[19c47888b6a6] jit-backend-dump}
[19c47888e0e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe3fb +0  640D0000
[19c47888ed10] jit-backend-dump}
[19c47888f1b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe415 +0  6F0D0000
[19c47888fb51] jit-backend-dump}
[19c47888ff7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe579 +0  300C0000
[19c47889083f] jit-backend-dump}
[19c478890c5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe588 +0  460C0000
[19c47889155a] jit-backend-dump}
[19c4788919a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe5a2 +0  510C0000
[19c47889223c] jit-backend-dump}
[19c478892667] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe5c8 +0  500C0000
[19c478892f39] jit-backend-dump}
[19c4788933ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe5d5 +0  680C0000
[19c478893d12] jit-backend-dump}
[19c4788941e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe5e9 +0  790C0000
[19c478894a98] jit-backend-dump}
[19c478894ebd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe5f7 +0  900C0000
[19c4788957d0] jit-backend-dump}
[19c478895c51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe624 +0  AD0C0000
[19c478896500] jit-backend-dump}
[19c478896948] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe63a +0  BC0C0000
[19c4788971eb] jit-backend-dump}
[19c478897616] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe64f +0  CC0C0000
[19c478897f44] jit-backend-dump}
[19c478898381] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe65d +0  E30C0000
[19c478898c32] jit-backend-dump}
[19c478899063] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe674 +0  F10C0000
[19c478899941] jit-backend-dump}
[19c478899d63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe68b +0  FF0C0000
[19c47889a60c] jit-backend-dump}
[19c47889aa3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe695 +0  1A0D0000
[19c47889b309] jit-backend-dump}
[19c47889b72e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe69f +0  350D0000
[19c47889bfe2] jit-backend-dump}
[19c47889c3fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe6b2 +0  470D0000
[19c47889ccb6] jit-backend-dump}
[19c47889d0e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe898 +0  860B0000
[19c47889d9d6] jit-backend-dump}
[19c47889de13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe8a7 +0  9C0B0000
[19c47889e6d6] jit-backend-dump}
[19c47889eaf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe8b0 +0  B80B0000
[19c47889f39e] jit-backend-dump}
[19c47889f7b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe8c4 +0  C90B0000
[19c4788a0042] jit-backend-dump}
[19c4788a0452] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe8d2 +0  E00B0000
[19c4788a0d21] jit-backend-dump}
[19c4788a1196] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe912 +0  EA0B0000
[19c4788a1a7d] jit-backend-dump}
[19c4788a1ea8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe944 +0  DD0B0000
[19c4788a2762] jit-backend-dump}
[19c4788a2b81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe95a +0  EC0B0000
[19c4788a342a] jit-backend-dump}
[19c4788a3861] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe96c +0  FF0B0000
[19c4788a40fa] jit-backend-dump}
[19c4788a451c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe97f +0  110C0000
[19c4788a4dcb] jit-backend-dump}
[19c4788a51ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe9a5 +0  100C0000
[19c4788a5b33] jit-backend-dump}
[19c4788a5f93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe9bc +0  1E0C0000
[19c4788a8aa0] jit-backend-dump}
[19c4788a9322] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe9dc +0  480C0000
[19c4788a9c8c] jit-backend-dump}
[19c4788aa0f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe9e9 +0  600C0000
[19c4788aaa68] jit-backend-dump}
[19c4788aae8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fea01 +0  6D0C0000
[19c4788ab72c] jit-backend-dump}
[19c4788abb48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fea1b +0  780C0000
[19c4788ac3e8] jit-backend-dump}
[19c4788ac807] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97feb84 +0  340B0000
[19c4788ad098] jit-backend-dump}
[19c4788ad4ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97feb93 +0  4A0B0000
[19c4788add77] jit-backend-dump}
[19c4788ae18a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97febad +0  550B0000
[19c4788aea86] jit-backend-dump}
[19c4788aef51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97febd3 +0  540B0000
[19c4788af835] jit-backend-dump}
[19c4788afc2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97febe0 +0  6C0B0000
[19c4788b04e2] jit-backend-dump}
[19c4788b0907] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97febf4 +0  7D0B0000
[19c4788b11e2] jit-backend-dump}
[19c4788b15e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fec02 +0  940B0000
[19c4788b1e92] jit-backend-dump}
[19c4788b22f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fec2f +0  B10B0000
[19c4788b2d17] jit-backend-dump}
[19c4788b3121] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fec45 +0  C00B0000
[19c4788b39dc] jit-backend-dump}
[19c4788b3de0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fec5a +0  D00B0000
[19c4788b46be] jit-backend-dump}
[19c4788b4b15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fec68 +0  E70B0000
[19c4788b53f1] jit-backend-dump}
[19c4788b5827] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fec7f +0  F50B0000
[19c4788b60d3] jit-backend-dump}
[19c4788b64e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fec98 +0  010C0000
[19c4788b6dcd] jit-backend-dump}
[19c4788b71e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97feca2 +0  1C0C0000
[19c4788b7ac4] jit-backend-dump}
[19c4788b7fa4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fecac +0  370C0000
[19c4788b8859] jit-backend-dump}
[19c4788b8c69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fecbf +0  490C0000
[19c4788b9517] jit-backend-dump}
[19c4788b9945] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97feea1 +0  8C0A0000
[19c4788ba1c7] jit-backend-dump}
[19c4788ba5d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97feeb0 +0  A20A0000
[19c4788bae89] jit-backend-dump}
[19c4788bb29c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97feeb9 +0  BE0A0000
[19c4788bbb8c] jit-backend-dump}
[19c4788bbfa4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97feecd +0  CF0A0000
[19c4788bc85c] jit-backend-dump}
[19c4788bcc69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97feedb +0  E60A0000
[19c4788bd518] jit-backend-dump}
[19c4788bd98a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fef1b +0  F00A0000
[19c4788be22f] jit-backend-dump}
[19c4788bee24] jit-backend}
[19c4788c0643] {jit-log-opt-loop
# Loop 6 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) : loop with 336 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p21 = getarrayitem_gc(p9, 5, descr=<ArrayP 8>)
+194: p23 = getarrayitem_gc(p9, 6, descr=<ArrayP 8>)
+198: p25 = getarrayitem_gc(p9, 7, descr=<ArrayP 8>)
+209: p26 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+209: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, descr=TargetToken(140633495993688))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+302: guard_value(i7, 4, descr=<Guard0x7fe7cc590ea8>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19, p21, p23, p25]
+312: guard_class(p17, 26177128, descr=<Guard0x7fe7c97ae7a0>) [p1, p0, p17, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+332: p29 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+336: guard_nonnull(p29, descr=<Guard0x7fe7c97ae728>) [p1, p0, p17, p29, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+345: i30 = getfield_gc(p17, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+349: p31 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+353: guard_class(p31, 26402504, descr=<Guard0x7fe7c97ae6b0>) [p1, p0, p17, i30, p31, p29, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+366: p33 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+370: i34 = getfield_gc(p33, descr=<FieldS list.length 8>)
+374: i35 = uint_ge(i30, i34)
guard_false(i35, descr=<Guard0x7fe7c97ae638>) [p1, p0, p17, i30, i34, p33, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+383: p36 = getfield_gc(p33, descr=<FieldP list.items 16>)
+387: p37 = getarrayitem_gc(p36, i30, descr=<ArrayP 8>)
+392: guard_nonnull(p37, descr=<Guard0x7fe7c97ae5c0>) [p1, p0, p17, i30, p37, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+401: i39 = int_add(i30, 1)
+405: setfield_gc(p17, i39, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+409: guard_value(i5, 0, descr=<Guard0x7fe7c97ae548>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p17, p21, p23, p25, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+419: guard_value(p4, ConstPtr(ptr41), descr=<Guard0x7fe7c97ae458>) [p1, p0, p4, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
+438: p42 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+450: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x7fe7c97ae368>) [p1, p0, p42, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
+469: p44 = getfield_gc(p42, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+473: guard_value(p44, ConstPtr(ptr45), descr=<Guard0x7fe7c97ae2f0>) [p1, p0, p44, p42, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
+492: guard_not_invalidated(descr=<Guard0x7fe7c97ae200>) [p1, p0, p42, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+492: p47 = getfield_gc(ConstPtr(ptr46), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+505: guard_value(p47, ConstPtr(ptr48), descr=<Guard0x7fe7c97ae110>) [p1, p0, p47, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+524: p50 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+581: p51 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+585: p52 = force_token()
+588: p53 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+592: guard_isnull(p53, descr=<Guard0x7fe7c97ae020>) [p1, p0, p50, p53, p2, p3, p6, p11, p13, p17, p51, p52, p37]
+601: i54 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+605: i55 = int_is_zero(i54)
guard_true(i55, descr=<Guard0x7fe7c97a7f88>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p51, p52, p37]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #0 LOAD_GLOBAL')
+615: guard_not_invalidated(descr=<Guard0x7fe7c97a7f10>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p51, p52, p37]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #9 CALL_FUNCTION')
+615: p56 = force_token()
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #0 LOAD_GLOBAL')
+618: p58 = getfield_gc(ConstPtr(ptr57), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+626: guard_value(p58, ConstPtr(ptr59), descr=<Guard0x7fe7c97a7e98>) [p1, p0, p50, p58, p2, p3, p6, p11, p13, p17, p56, p51, p52, p37]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #3 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #6 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #9 BINARY_SUBSCR')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #10 CALL_FUNCTION')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #13 BUILD_TUPLE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #16 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #19 BINARY_ADD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #20 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #23 LOAD_GLOBAL')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #26 LOOKUP_METHOD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #29 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #32 CALL_METHOD')
+639: p61 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+652: guard_class(p61, ConstClass(ObjectDictStrategy), descr=<Guard0x7fe7c97a7e20>) [p1, p0, p50, p61, p2, p3, p6, p11, p13, p17, p56, p51, p52, p37]
+665: p63 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+678: p64 = force_token()
p66 = new_with_vtable(26169824)
p68 = new_array(3, descr=<ArrayP 8>)
p70 = new_with_vtable(26169752)
+782: setfield_gc(p70, p56, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p70, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p64, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+852: setarrayitem_gc(p68, 0, ConstPtr(ptr72), descr=<ArrayP 8>)
+860: setarrayitem_gc(p68, 1, ConstPtr(ptr74), descr=<ArrayP 8>)
+874: setarrayitem_gc(p68, 2, ConstPtr(ptr76), descr=<ArrayP 8>)
+888: setfield_gc(p66, p68, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+892: i79 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v1381___simple_call__function_), p63, p66, -119233705492873519, descr=<Calli 8 rri EF=6>)
guard_not_forced(descr=<Guard0x7fe7cc5656a0>) [p1, p0, p50, p66, i79, p63, p70, p2, p3, p6, p11, p13, p17, p51, p52, p37]
+1021: guard_no_exception(descr=<Guard0x7fe7c97a7da8>) [p1, p0, p50, p66, i79, p63, p70, p2, p3, p6, p11, p13, p17, p51, p52, p37]
+1036: i81 = int_and(i79, -9223372036854775808)
+1052: i82 = int_is_true(i81)
guard_false(i82, descr=<Guard0x7fe7c97a7d30>) [p1, p0, p50, p66, i79, p63, p70, p2, p3, p6, p11, p13, p17, p51, p52, p37]
+1062: p83 = getfield_gc(p63, descr=<FieldP dicttable.entries 24>)
+1073: p84 = getinteriorfield_gc(p83, i79, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+1082: guard_nonnull_class(p84, 26724304, descr=<Guard0x7fe7c97a7cb8>) [p1, p0, p50, p66, p84, p70, p2, p3, p6, p11, p13, p17, p51, p52, p37]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #35 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #38 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #41 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #44 COMPARE_OP')
+1100: i87 = instance_ptr_eq(ConstPtr(ptr86), p84)
guard_false(i87, descr=<Guard0x7fe7c97a7c40>) [p1, p0, p50, p70, p2, p3, p6, p11, p13, p17, p84, p66, p51, p52, p37]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #50 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #53 RETURN_VALUE')
+1113: p88 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+1124: guard_isnull(p88, descr=<Guard0x7fe7c97a7bc8>) [p1, p0, p50, p84, p88, p70, p2, p3, p6, p11, p13, p17, None, p66, p51, p52, p37]
+1133: i90 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+1137: i91 = int_is_true(i90)
guard_false(i91, descr=<Guard0x7fe7c97a7b50>) [p1, p0, p50, p84, p70, p2, p3, p6, p11, p13, p17, None, p66, p51, p52, p37]
+1147: p92 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #12 LOOKUP_METHOD')
+1147: setfield_gc(p70, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #18 CALL_METHOD')
+1162: guard_not_invalidated(descr=<Guard0x7fe7c97a7ad8>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p84, None, p51, p52, p37]
+1162: i94 = strlen(p37)
+1173: i96 = int_gt(9223372036854775807, i94)
guard_true(i96, descr=<Guard0x7fe7c97a7a60>) [p1, p0, p50, p84, p37, p2, p3, p6, p11, p13, p17, None, None, p51, p52, None]
+1192: p97 = getfield_gc_pure(p84, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+1196: i98 = getfield_gc_pure(p84, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+1200: i100 = getarrayitem_gc_pure(p97, 0, descr=<ArrayS 8>)
+1204: i102 = int_eq(i100, 17)
guard_true(i102, descr=<Guard0x7fe7c97a7970>) [p1, p0, p50, p84, p2, p3, p6, p11, p13, p17, p97, i94, i98, None, None, p51, p52, p37]
+1214: i104 = getarrayitem_gc_pure(p97, 2, descr=<ArrayS 8>)
+1218: i106 = int_and(i104, 1)
+1225: i107 = int_is_true(i106)
guard_true(i107, descr=<Guard0x7fe7c97a7880>) [p1, p0, p50, p84, i104, p2, p3, p6, p11, p13, p17, p97, i94, i98, None, None, p51, p52, p37]
+1235: i109 = getarrayitem_gc_pure(p97, 5, descr=<ArrayS 8>)
+1239: i111 = int_gt(i109, 1)
guard_false(i111, descr=<Guard0x7fe7c97a7790>) [p1, p0, p50, p84, p2, p3, p6, p11, p13, p17, p97, i94, i98, None, None, p51, p52, p37]
+1249: i113 = getarrayitem_gc_pure(p97, 1, descr=<ArrayS 8>)
+1253: i115 = int_add(i113, 1)
+1257: i116 = getarrayitem_gc_pure(p97, i115, descr=<ArrayS 8>)
+1262: i118 = int_eq(i116, 19)
guard_true(i118, descr=<Guard0x7fe7c97a76a0>) [p1, p0, p50, p84, i115, p2, p3, p6, p11, p13, p17, p97, i94, i98, None, None, p51, p52, p37]
+1272: i120 = int_add(i115, 1)
+1276: i121 = getarrayitem_gc_pure(p97, i120, descr=<ArrayS 8>)
+1281: i123 = int_add(i115, 2)
+1285: i125 = int_lt(0, i94)
guard_true(i125, descr=<Guard0x7fe7c97a75b0>) [p1, p0, p50, p84, i121, i123, p2, p3, p6, p11, p13, p17, p97, i94, i98, None, None, p51, p52, p37]
+1295: guard_value(i123, 11, descr=<Guard0x7fe7c97a74c0>) [p1, p0, p50, p84, i121, i123, p97, p2, p3, p6, p11, p13, p17, None, i94, i98, None, None, p51, p52, p37]
+1305: guard_value(i121, 51, descr=<Guard0x7fe7c97a73d0>) [p1, p0, p50, p84, i121, p97, p2, p3, p6, p11, p13, p17, None, i94, i98, None, None, p51, p52, p37]
+1315: guard_value(p97, ConstPtr(ptr128), descr=<Guard0x7fe7c97a72e0>) [p1, p0, p50, p84, p97, p2, p3, p6, p11, p13, p17, None, i94, i98, None, None, p51, p52, p37]
debug_merge_point(2, 3, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+1334: p129 = force_token()
p131 = new_with_vtable(26271088)
p132 = new_with_vtable(26169752)
+1419: setfield_gc(p132, p52, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p132, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p129, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+1489: setfield_gc(p131, i98, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+1493: setfield_gc(p131, i94, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+1497: setfield_gc(p131, p37, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+1501: setfield_gc(p131, ConstPtr(ptr128), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
i133 = call_assembler(0, p131, descr=<Loop5>)
guard_not_forced(descr=<Guard0x7fe7cc5655a0>) [p1, p0, p50, p131, p84, i133, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1820: guard_no_exception(descr=<Guard0x7fe7c97a7268>) [p1, p0, p50, p131, p84, i133, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1835: guard_false(i133, descr=<Guard0x7fe7c97a71f0>) [p1, p0, p50, p131, p84, p132, p2, p3, p6, p11, p13, p17, p51, p37]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #21 RETURN_VALUE')
+1844: p134 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+1855: guard_isnull(p134, descr=<Guard0x7fe7c97a7100>) [p1, p0, p50, p134, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1864: i135 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+1868: i136 = int_is_true(i135)
guard_false(i136, descr=<Guard0x7fe7c97a7088>) [p1, p0, p50, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1878: p137 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p50, p51, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+1909: setfield_gc(p132, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
+1924: guard_not_invalidated(descr=<Guard0x7fe7c97a7010>) [p1, p0, p2, p3, p6, p11, p13, p17, None, p37]
+1924: i139 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+1932: i141 = int_lt(i139, 0)
guard_false(i141, descr=<Guard0x7fe7c97a6f98>) [p1, p0, p2, p3, p6, p11, p13, p17, None, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1942: label(p0, p1, p2, p3, p6, p11, p13, p37, p17, i135, p50, p51, descr=TargetToken(140633495993776))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1972: p142 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+1983: guard_nonnull(p142, descr=<Guard0x7fe7c97a6f20>) [p1, p0, p17, p142, p2, p3, p6, p11, p13, p37]
+1992: i143 = getfield_gc(p17, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+1996: p144 = getfield_gc(p142, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+2000: guard_class(p144, 26402504, descr=<Guard0x7fe7c97a6ea8>) [p1, p0, p17, i143, p144, p142, p2, p3, p6, p11, p13, p37]
+2014: p145 = getfield_gc(p142, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+2018: i146 = getfield_gc(p145, descr=<FieldS list.length 8>)
+2023: i147 = uint_ge(i143, i146)
guard_false(i147, descr=<Guard0x7fe7c97a6e30>) [p1, p0, p17, i143, i146, p145, p2, p3, p6, p11, p13, p37]
+2032: p148 = getfield_gc(p145, descr=<FieldP list.items 16>)
+2037: p149 = getarrayitem_gc(p148, i143, descr=<ArrayP 8>)
+2042: guard_nonnull(p149, descr=<Guard0x7fe7c97a6db8>) [p1, p0, p17, i143, p149, p2, p3, p6, p11, p13, p37]
+2051: i150 = int_add(i143, 1)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+2055: p151 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+2066: setfield_gc(p17, i150, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+2070: guard_value(p151, ConstPtr(ptr43), descr=<Guard0x7fe7c97a6d40>) [p1, p0, p151, p2, p3, p6, p11, p13, p17, p149, None]
+2089: p152 = getfield_gc(p151, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2093: guard_value(p152, ConstPtr(ptr45), descr=<Guard0x7fe7c97a6cc8>) [p1, p0, p152, p151, p2, p3, p6, p11, p13, p17, p149, None]
+2112: guard_not_invalidated(descr=<Guard0x7fe7c97a6c50>) [p1, p0, p151, p2, p3, p6, p11, p13, p17, p149, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+2112: p153 = getfield_gc(ConstPtr(ptr46), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2125: guard_value(p153, ConstPtr(ptr48), descr=<Guard0x7fe7c97a6bd8>) [p1, p0, p153, p2, p3, p6, p11, p13, p17, p149, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+2144: p154 = force_token()
+2147: i155 = int_is_zero(i135)
guard_true(i155, descr=<Guard0x7fe7c97a6ae8>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p51, p154, p149, None]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #0 LOAD_GLOBAL')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #9 CALL_FUNCTION')
+2157: p156 = force_token()
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #0 LOAD_GLOBAL')
+2160: p157 = getfield_gc(ConstPtr(ptr57), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2168: guard_value(p157, ConstPtr(ptr59), descr=<Guard0x7fe7c97a6a70>) [p1, p0, p50, p157, p2, p3, p6, p11, p13, p17, p156, p51, p154, p149, None]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #3 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #6 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #9 BINARY_SUBSCR')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #10 CALL_FUNCTION')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #13 BUILD_TUPLE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #16 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #19 BINARY_ADD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #20 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #23 LOAD_GLOBAL')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #26 LOOKUP_METHOD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #29 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #32 CALL_METHOD')
+2181: p158 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2194: guard_class(p158, ConstClass(ObjectDictStrategy), descr=<Guard0x7fe7c97a69f8>) [p1, p0, p50, p158, p2, p3, p6, p11, p13, p17, p156, p51, p154, p149, None]
+2207: p159 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+2220: p160 = force_token()
p161 = new_with_vtable(26169824)
p162 = new_array(3, descr=<ArrayP 8>)
p163 = new_with_vtable(26169752)
+2324: setfield_gc(p163, p156, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p163, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p160, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2392: setarrayitem_gc(p162, 0, ConstPtr(ptr72), descr=<ArrayP 8>)
+2400: setarrayitem_gc(p162, 1, ConstPtr(ptr74), descr=<ArrayP 8>)
+2414: setarrayitem_gc(p162, 2, ConstPtr(ptr167), descr=<ArrayP 8>)
+2428: setfield_gc(p161, p162, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+2432: i169 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v1381___simple_call__function_), p159, p161, -119233705492873519, descr=<Calli 8 rri EF=6>)
guard_not_forced(descr=<Guard0x7fe7cc5654a0>) [p1, p0, p50, p161, i169, p159, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
+2568: guard_no_exception(descr=<Guard0x7fe7c97a6980>) [p1, p0, p50, p161, i169, p159, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
+2583: i170 = int_and(i169, -9223372036854775808)
+2599: i171 = int_is_true(i170)
guard_false(i171, descr=<Guard0x7fe7c97a6908>) [p1, p0, p50, p161, i169, p159, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
+2609: p172 = getfield_gc(p159, descr=<FieldP dicttable.entries 24>)
+2620: p173 = getinteriorfield_gc(p172, i169, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+2629: guard_nonnull_class(p173, 26724304, descr=<Guard0x7fe7c97a6890>) [p1, p0, p50, p161, p173, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #35 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #38 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #41 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #44 COMPARE_OP')
+2647: i174 = instance_ptr_eq(ConstPtr(ptr86), p173)
guard_false(i174, descr=<Guard0x7fe7c97a6818>) [p1, p0, p50, p163, p2, p3, p6, p11, p13, p17, p161, p173, p51, p149, p154]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #50 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #53 RETURN_VALUE')
+2660: p175 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+2671: guard_isnull(p175, descr=<Guard0x7fe7c97a67a0>) [p1, p0, p50, p173, p175, p163, p2, p3, p6, p11, p13, p17, p161, None, p51, p149, p154]
+2680: i176 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+2684: i177 = int_is_true(i176)
guard_false(i177, descr=<Guard0x7fe7c97a6728>) [p1, p0, p50, p173, p163, p2, p3, p6, p11, p13, p17, p161, None, p51, p149, p154]
+2694: p178 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #12 LOOKUP_METHOD')
+2694: setfield_gc(p163, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #18 CALL_METHOD')
+2709: guard_not_invalidated(descr=<Guard0x7fe7c97a66b0>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, None, p173, p51, p149, p154]
+2709: i179 = strlen(p149)
+2720: i181 = int_gt(9223372036854775807, i179)
guard_true(i181, descr=<Guard0x7fe7c97a6638>) [p1, p0, p50, p173, p149, p2, p3, p6, p11, p13, p17, None, None, p51, None, p154]
+2739: p182 = getfield_gc_pure(p173, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+2743: i183 = getfield_gc_pure(p173, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+2747: i184 = getarrayitem_gc_pure(p182, 0, descr=<ArrayS 8>)
+2751: i185 = int_eq(i184, 17)
guard_true(i185, descr=<Guard0x7fe7c97a6548>) [p1, p0, p50, p173, p2, p3, p6, p11, p13, p17, i179, p182, i183, None, None, p51, p149, p154]
+2761: i186 = getarrayitem_gc_pure(p182, 2, descr=<ArrayS 8>)
+2765: i187 = int_and(i186, 1)
+2772: i188 = int_is_true(i187)
guard_true(i188, descr=<Guard0x7fe7c97a6458>) [p1, p0, p50, p173, i186, p2, p3, p6, p11, p13, p17, i179, p182, i183, None, None, p51, p149, p154]
+2782: i189 = getarrayitem_gc_pure(p182, 5, descr=<ArrayS 8>)
+2786: i190 = int_gt(i189, 1)
guard_false(i190, descr=<Guard0x7fe7c97a6368>) [p1, p0, p50, p173, p2, p3, p6, p11, p13, p17, i179, p182, i183, None, None, p51, p149, p154]
+2796: i191 = getarrayitem_gc_pure(p182, 1, descr=<ArrayS 8>)
+2800: i192 = int_add(i191, 1)
+2804: i193 = getarrayitem_gc_pure(p182, i192, descr=<ArrayS 8>)
+2809: i194 = int_eq(i193, 19)
guard_true(i194, descr=<Guard0x7fe7c97a6278>) [p1, p0, p50, p173, i192, p2, p3, p6, p11, p13, p17, i179, p182, i183, None, None, p51, p149, p154]
+2819: i195 = int_add(i192, 1)
+2824: i196 = getarrayitem_gc_pure(p182, i195, descr=<ArrayS 8>)
+2829: i197 = int_add(i192, 2)
+2834: i199 = int_lt(0, i179)
guard_true(i199, descr=<Guard0x7fe7c97a6188>) [p1, p0, p50, p173, i196, i197, p2, p3, p6, p11, p13, p17, i179, p182, i183, None, None, p51, p149, p154]
+2844: guard_value(i197, 11, descr=<Guard0x7fe7c97a6098>) [p1, p0, p50, p173, i196, i197, p182, p2, p3, p6, p11, p13, p17, i179, None, i183, None, None, p51, p149, p154]
+2854: guard_value(i196, 51, descr=<Guard0x7fe7c9799f88>) [p1, p0, p50, p173, i196, p182, p2, p3, p6, p11, p13, p17, i179, None, i183, None, None, p51, p149, p154]
+2864: guard_value(p182, ConstPtr(ptr128), descr=<Guard0x7fe7c9799e98>) [p1, p0, p50, p173, p182, p2, p3, p6, p11, p13, p17, i179, None, i183, None, None, p51, p149, p154]
debug_merge_point(2, 3, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+2883: p200 = force_token()
p201 = new_with_vtable(26271088)
p202 = new_with_vtable(26169752)
+2968: setfield_gc(p202, p154, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p202, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p200, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+3034: setfield_gc(p201, i183, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+3038: setfield_gc(p201, i179, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+3042: setfield_gc(p201, p149, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+3046: setfield_gc(p201, ConstPtr(ptr128), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
i203 = call_assembler(0, p201, descr=<Loop5>)
guard_not_forced(descr=<Guard0x7fe7cc5653a0>) [p1, p0, p50, p201, p173, i203, p202, p2, p3, p6, p11, p13, p17, p149, p51]
+3365: guard_no_exception(descr=<Guard0x7fe7c9799e20>) [p1, p0, p50, p201, p173, i203, p202, p2, p3, p6, p11, p13, p17, p149, p51]
+3380: guard_false(i203, descr=<Guard0x7fe7c9799da8>) [p1, p0, p50, p201, p173, p202, p2, p3, p6, p11, p13, p17, p149, p51]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #21 RETURN_VALUE')
+3389: p204 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+3400: guard_isnull(p204, descr=<Guard0x7fe7c9799cb8>) [p1, p0, p50, p204, p202, p2, p3, p6, p11, p13, p17, p149, p51]
+3409: i205 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+3413: i206 = int_is_true(i205)
guard_false(i206, descr=<Guard0x7fe7c9799c40>) [p1, p0, p50, p202, p2, p3, p6, p11, p13, p17, p149, p51]
+3423: p207 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p50, p51, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+3454: setfield_gc(p202, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
+3469: guard_not_invalidated(descr=<Guard0x7fe7c9799bc8>) [p1, p0, p2, p3, p6, p11, p13, p17, p149, None]
+3469: i208 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+3477: i209 = int_lt(i208, 0)
guard_false(i209, descr=<Guard0x7fe7c9799b50>) [p1, p0, p2, p3, p6, p11, p13, p17, p149, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+3487: jump(p0, p1, p2, p3, p6, p11, p13, p149, p17, i205, p50, p51, descr=TargetToken(140633495993776))
+3512: --end of the loop--
[19c478a2aa91] jit-log-opt-loop}
[19c478b358a6] {jit-backend
[19c47979bbfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffa
[19c4797a2ceb] jit-backend-dump}
[19c4797a3ba6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffa6c +0  1C000000
[19c4797a486a] jit-backend-dump}
[19c4797a4daf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffa77 +0  1C000000
[19c4797a5763] jit-backend-dump}
[19c4797a5d58] {jit-backend-addr
bridge out of Guard 0x7fe7cc590e30 has address 0x7fe7c97ffa68 to 0x7fe7c97ffb20
[19c4797a6e0c] jit-backend-addr}
[19c4797a778d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffac4 +0  58000000
[19c4797a8098] jit-backend-dump}
[19c4797a85ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffad5 +0  6C000000
[19c4797a8ea6] jit-backend-dump}
[19c4797a99e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fda9d +0  C71F0000
[19c4797aa288] jit-backend-dump}
[19c4797ab002] jit-backend}
[19c4797ac923] {jit-log-opt-bridge
# bridge out of Guard 0x7fe7cc590e30 with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+76: p2 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+80: i3 = strgetitem(p2, i0)
+86: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard0x7fe7c97ae818>) [i0, p1]
+96: i7 = int_add(i0, 1)
+100: i8 = getfield_gc_pure(p1, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+104: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard0x7fe7c97ae980>) [i7, p1]
+113: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+184: --end of the loop--
[19c4797bab2d] jit-log-opt-bridge}
[19c479cd66a7] {jit-backend
[19c479d7d9d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffbd
[19c479d8480b] jit-backend-dump}
[19c479d8531d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffbd4 +0  2B000000
[19c479d86264] jit-backend-dump}
[19c479d86767] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffbdf +0  2B000000
[19c479d87163] jit-backend-dump}
[19c479d95545] {jit-backend-addr
bridge out of Guard 0x7fe7c97a71f0 has address 0x7fe7c97ffbd0 to 0x7fe7c97ffd2f
[19c479d968fd] jit-backend-addr}
[19c479d973bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffc2c +0  FF000000
[19c479d980f2] jit-backend-dump}
[19c479d987a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffc3a +0  16010000
[19c479d990a1] jit-backend-dump}
[19c479d9971b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffc7c +0  1E010000
[19c479d9a08e] jit-backend-dump}
[19c479d9a893] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe8b0 +0  1C130000
[19c479d9b223] jit-backend-dump}
[19c479d9bcf5] jit-backend}
[19c479d9d0dd] {jit-log-opt-bridge
# bridge out of Guard 0x7fe7c97a71f0 with 19 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #21 RETURN_VALUE')
+76: p14 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+87: guard_isnull(p14, descr=<Guard0x7fe7c97af1f0>) [p0, p1, p2, p14, p5, p6, p7, p8, p9, p10, p11, p4, p3, p12, p13]
+96: i15 = getfield_gc(p2, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+100: i16 = int_is_true(i15)
guard_false(i16, descr=<Guard0x7fe7c97af9e8>) [p0, p1, p2, p5, p6, p7, p8, p9, p10, p11, p4, p3, p12, p13]
+110: p17 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p2, p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+143: setfield_gc(p5, ConstPtr(ptr18), descr=<FieldP JitVirtualRef.virtual_token 8>)
+158: guard_not_invalidated(descr=<Guard0x7fe7c97af970>) [p0, p1, p6, p7, p8, p9, p10, p11, None, None, None, p13]
+158: i21 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+166: i23 = int_lt(i21, 0)
guard_false(i23, descr=<Guard0x7fe7c97af8f8>) [p0, p1, p6, p7, p8, p9, p10, p11, None, None, None, p13]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
p25 = new_with_vtable(ConstClass(W_StringObject))
+240: setfield_gc(p25, p13, descr=<FieldP pypy.objspace.std.stringobject.W_StringObject.inst__value 8>)
+251: jump(p1, p0, p6, p7, ConstPtr(ptr26), 0, p8, 4, 44, p9, p10, p25, p11, ConstPtr(ptr30), ConstPtr(ptr31), ConstPtr(ptr31), ConstPtr(ptr31), descr=TargetToken(140633495993688))
+351: --end of the loop--
[19c479db747f] jit-log-opt-bridge}
[19c479df7345] {jit-backend
[19c479e07815] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffdd8 +0  48817D50FFFFFF007D2448C7442408FFFFFF0049BBC8FD7FC9E77F00004C891C2449BB75A27FC9E77F000041FFD349BB60E367CCE77F00004D8B3B4D8D6F0149BB60E367CCE77F00004D892B4D8D6C24014D896E1849C74620000000004D89662848C745580100000048C7451000C6FA0148C74520000000004889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[19c479e0a928] jit-backend-dump}
[19c479e0b078] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffddc +0  1C000000
[19c479e0baee] jit-backend-dump}
[19c479e0bf7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffde7 +0  1C000000
[19c479e0c8fc] jit-backend-dump}
[19c479e0d292] {jit-backend-addr
bridge out of Guard 0x7fe7cc590bd8 has address 0x7fe7c97ffdd8 to 0x7fe7c97ffe80
[19c479e0de07] jit-backend-addr}
[19c479e0e422] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd935 +0  9F240000
[19c479e0ed6b] jit-backend-dump}
[19c479e0f605] jit-backend}
[19c479e0fec6] {jit-log-opt-bridge
# bridge out of Guard 0x7fe7cc590bd8 with 5 ops
[i0, p1]
+76: i3 = int_add(i0, 1)
+81: setfield_gc(p1, i3, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+85: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+93: setfield_gc(p1, i0, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+97: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+168: --end of the loop--
[19c479e1ca80] jit-log-opt-bridge}
[19c479f2e525] {jit-backend
[19c479f3b4f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffe90 +0  48817D50FFFFFF007D2448C7442408FFFFFF0049BB80FE7FC9E77F00004C891C2449BB75A27FC9E77F000041FFD349BB78E367CCE77F00004D8B3B4D8D6F0149BB78E367CCE77F00004D892B4D8D6A014D896E1849C74620000000004D89562848C745580100000048C7451000C6FA0148C74520000000004889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[19c479f3e4c5] jit-backend-dump}
[19c479f3ebf1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffe94 +0  1C000000
[19c479f3f5f2] jit-backend-dump}
[19c479f3fa8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffe9f +0  1C000000
[19c479f40363] jit-backend-dump}
[19c479f407cf] {jit-backend-addr
bridge out of Guard 0x7fe7cc590cc8 has address 0x7fe7c97ffe90 to 0x7fe7c97fff37
[19c479f412f4] jit-backend-addr}
[19c479f418fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fda8c +0  00240000
[19c479f4221d] jit-backend-dump}
[19c479f42a57] jit-backend}
[19c479f431cb] {jit-log-opt-bridge
# bridge out of Guard 0x7fe7cc590cc8 with 5 ops
[i0, p1]
+76: i3 = int_add(i0, 1)
+80: setfield_gc(p1, i3, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+84: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+92: setfield_gc(p1, i0, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+96: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+167: --end of the loop--
[19c479f495e2] jit-log-opt-bridge}
[19c479f70541] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd1a1 +0  E915040000
[19c479f71ea4] jit-backend-dump}
[19c479f723ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fd33a +0  E97F030000
[19c479f72e70] jit-backend-dump}
[19c479f7360d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe36c +0  E9390D0000
[19c479f73f8f] jit-backend-dump}
[19c479f743bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe3e7 +0  E9520D0000
[19c479f74d41] jit-backend-dump}
[19c479f751f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe60a +0  E9A10C0000
[19c479f75b8b] jit-backend-dump}
[19c479f760c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe904 +0  E9D20B0000
[19c479f76a10] jit-backend-dump}
[19c479f76e82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fe9c0 +0  E93E0C0000
[19c479f777dd] jit-backend-dump}
[19c479f77c8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fec15 +0  E9A50B0000
[19c479f78648] jit-backend-dump}
[19c479f78b10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97fef0d +0  E9D80A0000
[19c479f7945f] jit-backend-dump}
[19c479f79bbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c97ffc6e +0  E906010000
[19c479f7a528] jit-backend-dump}
[19c47a16f293] {jit-backend
[19c47a24cdf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c
[19c47a260a8c] jit-backend-dump}
[19c47a261373] {jit-backend-addr
Loop 7 (<code object double_loop, file 'source.py', line 47> #38 FOR_ITER) has address 0x7fe7c98000c8 to 0x7fe7c98002ff (bootstrap 0x7fe7c9800078)
[19c47a26256b] jit-backend-addr}
[19c47a262d6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980019e +0  5D010000
[19c47a263b5b] jit-backend-dump}
[19c47a264161] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98001aa +0  76010000
[19c47a264b92] jit-backend-dump}
[19c47a264f9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98001b7 +0  8E010000
[19c47a26596b] jit-backend-dump}
[19c47a265def] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98001cc +0  9E010000
[19c47a2666be] jit-backend-dump}
[19c47a266b04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98001e6 +0  A9010000
[19c47a267473] jit-backend-dump}
[19c47a267898] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98001ef +0  C5010000
[19c47a268156] jit-backend-dump}
[19c47a268577] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980020e +0  CB010000
[19c47a268e2f] jit-backend-dump}
[19c47a26924e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800220 +0  DE010000
[19c47a269b85] jit-backend-dump}
[19c47a269f86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980023a +0  E9010000
[19c47a26a83e] jit-backend-dump}
[19c47a26ac54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980024a +0  FE010000
[19c47a26b526] jit-backend-dump}
[19c47a26b933] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800257 +0  16020000
[19c47a26c1dc] jit-backend-dump}
[19c47a26c86b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800269 +0  4E020000
[19c47a26f7c3] jit-backend-dump}
[19c47a26fd6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980027c +0  60020000
[19c47a270669] jit-backend-dump}
[19c47a270a97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98002aa +0  57020000
[19c47a27136c] jit-backend-dump}
[19c47a27178e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98002cb +0  5B020000
[19c47a27206c] jit-backend-dump}
[19c47a272473] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98002d7 +0  74020000
[19c47a272d28] jit-backend-dump}
[19c47a273284] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98002e9 +0  AC020000
[19c47a273b57] jit-backend-dump}
[19c47a2743f1] jit-backend}
[19c47a2755ce] {jit-log-opt-loop
# Loop 7 (<code object double_loop, file 'source.py', line 47> #38 FOR_ITER) : loop with 87 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p21 = getarrayitem_gc(p9, 5, descr=<ArrayP 8>)
+187: p23 = getarrayitem_gc(p9, 6, descr=<ArrayP 8>)
+198: p25 = getarrayitem_gc(p9, 7, descr=<ArrayP 8>)
+209: p26 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+209: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, descr=TargetToken(140633494568992))
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+288: guard_value(i7, 5, descr=<Guard0x7fe7c97afa60>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19, p21, p23, p25]
+298: guard_class(p19, 26177128, descr=<Guard0x7fe7c97cf1f0>) [p1, p0, p19, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+310: p29 = getfield_gc(p19, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+314: guard_nonnull(p29, descr=<Guard0x7fe7c97cf178>) [p1, p0, p19, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+323: i30 = getfield_gc(p19, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+327: p31 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+331: guard_class(p31, 26517736, descr=<Guard0x7fe7c97cf100>) [p1, p0, p19, i30, p31, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+344: p33 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+348: i34 = getfield_gc_pure(p33, descr=<FieldS tuple3.item0 8>)
+352: i35 = getfield_gc_pure(p33, descr=<FieldS tuple3.item1 16>)
+356: i36 = getfield_gc_pure(p33, descr=<FieldS tuple3.item2 24>)
+360: i38 = int_lt(i30, 0)
guard_false(i38, descr=<Guard0x7fe7c97cf088>) [p1, p0, p19, i30, i36, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+370: i39 = int_ge(i30, i36)
guard_false(i39, descr=<Guard0x7fe7c97cf010>) [p1, p0, p19, i30, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+379: i40 = int_mul(i30, i35)
+386: i41 = int_add(i34, i40)
+392: i43 = int_add(i30, 1)
+396: setfield_gc(p19, i43, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+400: guard_value(i5, 0, descr=<Guard0x7fe7c97cef98>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #41 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #44 LOAD_FAST')
+410: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard0x7fe7c97ceea8>) [p1, p0, p11, p2, p3, p4, p6, p13, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #47 LOAD_FAST')
+428: guard_nonnull_class(p13, ConstClass(W_IntObject), descr=<Guard0x7fe7c97cedb8>) [p1, p0, p13, p2, p3, p4, p6, p11, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #50 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #53 BINARY_ADD')
+454: i47 = getfield_gc_pure(p13, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+458: i48 = int_add_ovf(i47, i41)
guard_no_overflow(descr=<Guard0x7fe7c97ced40>) [p1, p0, p13, i48, p2, p3, p4, p6, p11, p17, p19, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #54 INPLACE_ADD')
+470: i49 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+474: i50 = int_add_ovf(i49, i48)
guard_no_overflow(descr=<Guard0x7fe7c97cec50>) [p1, p0, p11, i50, p2, p3, p4, p6, p13, p17, p19, i48, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #55 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #58 JUMP_ABSOLUTE')
+483: guard_not_invalidated(descr=<Guard0x7fe7c97cebd8>) [p1, p0, p2, p3, p4, p6, p13, p17, p19, i50, None, i41]
+483: i53 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+491: i55 = int_lt(i53, 0)
guard_false(i55, descr=<Guard0x7fe7c97ceb60>) [p1, p0, p2, p3, p4, p6, p13, p17, p19, i50, None, i41]
+501: guard_value(p4, ConstPtr(ptr56), descr=<Guard0x7fe7c97ceae8>) [p1, p0, p4, p2, p3, p6, p13, p17, p19, i50, None, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+520: label(p0, p1, p2, p3, p6, i50, p13, i41, p17, p19, i43, i36, i35, i34, i47, descr=TargetToken(140633494569080))
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+557: i57 = int_ge(i43, i36)
guard_false(i57, descr=<Guard0x7fe7c97ce9f8>) [p1, p0, p19, i43, i35, i34, p2, p3, p6, p13, p17, i41, i50]
+566: i58 = int_mul(i43, i35)
+573: i59 = int_add(i34, i58)
+579: i60 = int_add(i43, 1)
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #41 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #44 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #47 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #50 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #53 BINARY_ADD')
+583: setfield_gc(p19, i60, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+587: i61 = int_add_ovf(i47, i59)
guard_no_overflow(descr=<Guard0x7fe7c97ce980>) [p1, p0, p13, i61, p2, p3, p6, p17, p19, i59, None, i50]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #54 INPLACE_ADD')
+599: i62 = int_add_ovf(i50, i61)
guard_no_overflow(descr=<Guard0x7fe7c97ce890>) [p1, p0, i62, p2, p3, p6, p13, p17, p19, i61, i59, None, i50]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #55 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #58 JUMP_ABSOLUTE')
+611: guard_not_invalidated(descr=<Guard0x7fe7c97ce7a0>) [p1, p0, p2, p3, p6, p13, p17, p19, i62, None, i59, None, None]
+611: i63 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+619: i64 = int_lt(i63, 0)
guard_false(i64, descr=<Guard0x7fe7c97ce6b0>) [p1, p0, p2, p3, p6, p13, p17, p19, i62, None, i59, None, None]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+629: jump(p0, p1, p2, p3, p6, i62, p13, i59, p17, p19, i60, i36, i35, i34, i47, descr=TargetToken(140633494569080))
+647: --end of the loop--
[19c47a2c737c] jit-log-opt-loop}
[19c47a744506] {jit-backend
[19c47a82a8bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c
[19c47a8349b1] jit-backend-dump}
[19c47a83558b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800694 +0  28000000
[19c47a83626d] jit-backend-dump}
[19c47a836806] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980069f +0  28000000
[19c47a8372ef] jit-backend-dump}
[19c47a837854] {jit-backend-addr
bridge out of Guard 0x7fe7c97ce9f8 has address 0x7fe7c9800690 to 0x7fe7c980091a
[19c47a83843d] jit-backend-addr}
[19c47a838af0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98006f9 +0  1D020000
[19c47a839462] jit-backend-dump}
[19c47a839aa7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980070b +0  55020000
[19c47a83a3b8] jit-backend-dump}
[19c47a83a809] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980071f +0  66020000
[19c47a83b0de] jit-backend-dump}
[19c47a83b562] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980072c +0  7E020000
[19c47a83be91] jit-backend-dump}
[19c47a83c28f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800742 +0  8D020000
[19c47a83cb52] jit-backend-dump}
[19c47a83cf47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980075f +0  95020000
[19c47a83d84c] jit-backend-dump}
[19c47a83dc47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800768 +0  B1020000
[19c47a83e502] jit-backend-dump}
[19c47a83e8f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800798 +0  A6020000
[19c47a848ae0] jit-backend-dump}
[19c47a8491e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98007af +0  B4020000
[19c47a849cf8] jit-backend-dump}
[19c47a84a0f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98007c4 +0  C4020000
[19c47a84a9a8] jit-backend-dump}
[19c47a84b1dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98002aa +0  E2030000
[19c47a84bb2f] jit-backend-dump}
[19c47a84c5bf] jit-backend}
[19c47a84d4ea] {jit-log-opt-bridge
# bridge out of Guard 0x7fe7c97ce9f8 with 60 ops
[p0, p1, p2, i3, i4, i5, p6, p7, p8, p9, p10, i11, i12]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #61 POP_BLOCK')
+76: p13 = getfield_gc_pure(p8, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+87: i14 = getfield_gc_pure(p8, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+91: setfield_gc(p2, ConstPtr(ptr15), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+99: guard_value(i14, 4, descr=<Guard0x7fe7c97cf2e0>) [p0, p1, i14, p6, p7, p13, p9, p10, i12, i11]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #62 JUMP_ABSOLUTE')
+109: guard_not_invalidated(descr=<Guard0x7fe7c97e74c0>) [p0, p1, p6, p7, p13, p9, p10, i12, i11]
+109: i18 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+117: i20 = int_lt(i18, 0)
guard_false(i20, descr=<Guard0x7fe7c97e7448>) [p0, p1, p6, p7, p13, p9, p10, i12, i11]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #19 FOR_ITER')
+127: guard_class(p10, 26177128, descr=<Guard0x7fe7c97e73d0>) [p0, p1, p10, p6, p7, p13, p9, i12, i11]
+147: p22 = getfield_gc(p10, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+151: guard_nonnull(p22, descr=<Guard0x7fe7c97e7358>) [p0, p1, p10, p22, p6, p7, p13, p9, i12, i11]
+160: i23 = getfield_gc(p10, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+164: p24 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+168: guard_class(p24, 26517736, descr=<Guard0x7fe7c97e72e0>) [p0, p1, p10, i23, p24, p22, p6, p7, p13, p9, i12, i11]
+182: p26 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+186: i27 = getfield_gc_pure(p26, descr=<FieldS tuple3.item0 8>)
+191: i28 = getfield_gc_pure(p26, descr=<FieldS tuple3.item1 16>)
+196: i29 = getfield_gc_pure(p26, descr=<FieldS tuple3.item2 24>)
+201: i31 = int_lt(i23, 0)
guard_false(i31, descr=<Guard0x7fe7c97e71f0>) [p0, p1, p10, i23, i29, i28, i27, p6, p7, p13, p9, i12, i11]
+211: i32 = int_ge(i23, i29)
guard_false(i32, descr=<Guard0x7fe7c97e7178>) [p0, p1, p10, i23, i28, i27, p6, p7, p13, p9, i12, i11]
+220: i33 = int_mul(i23, i28)
+227: i34 = int_add(i27, i33)
+230: i36 = int_add(i23, 1)
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #25 SETUP_LOOP')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #28 LOAD_GLOBAL')
+234: p37 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+245: setfield_gc(p10, i36, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+249: guard_value(p37, ConstPtr(ptr38), descr=<Guard0x7fe7c97e7100>) [p0, p1, p37, p6, p7, p10, i34, p13, i12, i11]
+268: p39 = getfield_gc(p37, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+272: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x7fe7c97e7088>) [p0, p1, p39, p37, p6, p7, p10, i34, p13, i12, i11]
+291: p42 = getfield_gc(ConstPtr(ptr41), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+299: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x7fe7c97e7010>) [p0, p1, p42, p6, p7, p10, i34, p13, i12, i11]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #31 LOAD_CONST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #34 CALL_FUNCTION')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #37 GET_ITER')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+312: p44 = same_as(ConstPtr(ptr40))
+312: label(p1, p0, p6, p7, p13, i12, i34, i11, p10, descr=TargetToken(140633494569256))
p46 = new_with_vtable(26354736)
p48 = new_with_vtable(ConstClass(W_IntObject))
p50 = new_with_vtable(ConstClass(W_IntObject))
+438: setfield_gc(p48, i12, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
p52 = new_with_vtable(ConstClass(W_IntObject))
+454: setfield_gc(p50, i34, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
p54 = new_with_vtable(26177128)
p56 = new_with_vtable(ConstClass(W_ListObject))
+480: setfield_gc(p46, 62, descr=<FieldU pypy.interpreter.pyopcode.FrameBlock.inst_handlerposition 8>)
+488: setfield_gc(p46, p13, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+499: setfield_gc(p46, 4, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+507: setfield_gc(p52, i11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+518: setfield_gc(p56, ConstPtr(ptr59), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+526: setfield_gc(p56, ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+540: setfield_gc(p54, p56, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+544: jump(p1, p0, p6, p7, ConstPtr(ptr61), 0, p46, 5, 37, p48, p50, p52, p10, p54, ConstPtr(ptr65), ConstPtr(ptr66), ConstPtr(ptr66), descr=TargetToken(140633494568992))
+650: --end of the loop--
[19c47a8873ec] jit-log-opt-bridge}
[19c47ae5a66d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980025b +0  E936020000
[19c47ae5d335] jit-backend-dump}
[19c47ae5d8a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98002db +0  E994020000
[19c47ae5e392] jit-backend-dump}
[19c47ae5e7b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98006fd +0  E93D020000
[19c47ae5f12d] jit-backend-dump}
[19c47b259f92] {jit-backend
[19c47b37701f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800c
[19c47b390082] jit-backend-dump}
[19c47b390c6e] {jit-backend-addr
Loop 8 (<code object inlined_bridge, file 'source.py', line 63> #13 FOR_ITER) has address 0x7fe7c9800c88 to 0x7fe7c9800f8b (bootstrap 0x7fe7c9800c38)
[19c47b391f21] jit-backend-addr}
[19c47b39290e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800d39 +0  4E020000
[19c47b3936a5] jit-backend-dump}
[19c47b393c7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800d45 +0  67020000
[19c47b3946f7] jit-backend-dump}
[19c47b394b48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800d52 +0  78020000
[19c47b395468] jit-backend-dump}
[19c47b395890] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800d66 +0  82020000
[19c47b396247] jit-backend-dump}
[19c47b396666] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800d80 +0  86020000
[19c47b396f6d] jit-backend-dump}
[19c47b39738f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800d89 +0  9B020000
[19c47b397d58] jit-backend-dump}
[19c47b398156] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800da8 +0  9A020000
[19c47b398a64] jit-backend-dump}
[19c47b398e80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800dbb +0  A5020000
[19c47b39974f] jit-backend-dump}
[19c47b399bee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800dd2 +0  AC020000
[19c47b39a53d] jit-backend-dump}
[19c47b39a9b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800dea +0  B2020000
[19c47b39b2e6] jit-backend-dump}
[19c47b39b90d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800e5a +0  7E020000
[19c47b39c253] jit-backend-dump}
[19c47b39c69c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800e68 +0  8E020000
[19c47b39cf59] jit-backend-dump}
[19c47b39d366] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800e7f +0  95020000
[19c47b39dc3c] jit-backend-dump}
[19c47b39e054] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800eb4 +0  7E020000
[19c47b39e912] jit-backend-dump}
[19c47b39ed90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800ec6 +0  A8020000
[19c47b39f6d9] jit-backend-dump}
[19c47b39fb8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800eff +0  8D020000
[19c47b3a0456] jit-backend-dump}
[19c47b3a08aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800f39 +0  8F020000
[19c47b3a1188] jit-backend-dump}
[19c47b3a15c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800f69 +0  7D020000
[19c47b3a44ac] jit-backend-dump}
[19c47b3a4b53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800f7b +0  89020000
[19c47b3a55e0] jit-backend-dump}
[19c47b3a5f9d] jit-backend}
[19c47b3a754f] {jit-log-opt-loop
# Loop 8 (<code object inlined_bridge, file 'source.py', line 63> #13 FOR_ITER) : loop with 114 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p18 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, descr=TargetToken(140633494569960))
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #13 FOR_ITER')
+251: guard_value(i7, 2, descr=<Guard0x7fe7c97e7cb8>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17]
+261: guard_class(p13, 26177128, descr=<Guard0x45ebd30>) [p1, p0, p13, p2, p3, p4, i5, p6, p11, p15, p17]
+273: p21 = getfield_gc(p13, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+277: guard_nonnull(p21, descr=<Guard0x45ebcb8>) [p1, p0, p13, p21, p2, p3, p4, i5, p6, p11, p15, p17]
+286: i22 = getfield_gc(p13, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+290: p23 = getfield_gc(p21, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+294: guard_class(p23, 26517736, descr=<Guard0x45ebc40>) [p1, p0, p13, i22, p23, p21, p2, p3, p4, i5, p6, p11, p15, p17]
+306: p25 = getfield_gc(p21, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+310: i26 = getfield_gc_pure(p25, descr=<FieldS tuple3.item0 8>)
+314: i27 = getfield_gc_pure(p25, descr=<FieldS tuple3.item1 16>)
+318: i28 = getfield_gc_pure(p25, descr=<FieldS tuple3.item2 24>)
+322: i30 = int_lt(i22, 0)
guard_false(i30, descr=<Guard0x45ebbc8>) [p1, p0, p13, i22, i28, i27, i26, p2, p3, p4, i5, p6, p11, p15, p17]
+332: i31 = int_ge(i22, i28)
guard_false(i31, descr=<Guard0x45ebb50>) [p1, p0, p13, i22, i27, i26, p2, p3, p4, i5, p6, p11, p15, p17]
+341: i32 = int_mul(i22, i27)
+348: i33 = int_add(i26, i32)
+354: i35 = int_add(i22, 1)
+358: setfield_gc(p13, i35, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+362: guard_value(i5, 0, descr=<Guard0x45ebad8>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p17, i33]
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #19 LOAD_GLOBAL')
+372: guard_value(p4, ConstPtr(ptr37), descr=<Guard0x45eba60>) [p1, p0, p4, p2, p3, p6, p13, p17, i33]
+391: p38 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+395: guard_value(p38, ConstPtr(ptr39), descr=<Guard0x45eb9e8>) [p1, p0, p38, p2, p3, p6, p13, p17, i33]
+414: p40 = getfield_gc(p38, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+419: guard_value(p40, ConstPtr(ptr41), descr=<Guard0x45eb970>) [p1, p0, p40, p38, p2, p3, p6, p13, p17, i33]
+438: guard_not_invalidated(descr=<Guard0x45eb8f8>) [p1, p0, p38, p2, p3, p6, p13, p17, i33]
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #22 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #25 CALL_FUNCTION')
+438: p43 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+530: p44 = getfield_gc(p43, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+534: p45 = force_token()
+537: p46 = getfield_gc(p43, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+541: guard_isnull(p46, descr=<Guard0x45eb880>) [p1, p0, p43, p46, p2, p3, p6, p13, p45, p44, i33]
+550: i47 = getfield_gc(p43, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+554: i48 = int_is_zero(i47)
guard_true(i48, descr=<Guard0x45eb808>) [p1, p0, p43, p2, p3, p6, p13, p45, p44, i33]
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #0 LOAD_FAST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #3 LOAD_CONST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #6 BINARY_MODULO')
+564: i50 = int_eq(i33, -9223372036854775808)
guard_false(i50, descr=<Guard0x45eb790>) [p1, p0, p43, i33, p2, p3, p6, p13, p45, p44, None]
+587: i53 = int_mod(i33, 2)
+611: i55 = int_rshift(i53, 63)
+618: i56 = int_and(2, i55)
+627: i57 = int_add(i53, i56)
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #7 POP_JUMP_IF_FALSE')
+630: i58 = int_is_true(i57)
guard_false(i58, descr=<Guard0x45eb718>) [p1, p0, p43, p2, p3, p6, p13, i57, p45, p44, i33]
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #19 LOAD_CONST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #22 STORE_FAST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #25 LOAD_FAST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #28 RETURN_VALUE')
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #28 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #29 JUMP_ABSOLUTE')
+640: guard_not_invalidated(descr=<Guard0x45eb6a0>) [p1, p0, p2, p3, p6, p13, None, None, None, i33]
+640: i60 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+648: i62 = int_lt(i60, 0)
guard_false(i62, descr=<Guard0x45eb628>) [p1, p0, p2, p3, p6, p13, None, None, None, i33]
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #13 FOR_ITER')
+658: p63 = same_as(ConstPtr(ptr41))
+658: label(p0, p1, p2, p3, p6, i33, p13, i35, i28, i27, i26, p43, p44, descr=TargetToken(140633494570048))
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #13 FOR_ITER')
+695: i64 = int_ge(i35, i28)
guard_false(i64, descr=<Guard0x45eb5b0>) [p1, p0, p13, i35, i27, i26, p2, p3, p6, i33]
+715: i65 = int_mul(i35, i27)
+719: i66 = int_add(i26, i65)
+729: i67 = int_add(i35, 1)
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #19 LOAD_GLOBAL')
+740: setfield_gc(p13, i67, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+751: guard_not_invalidated(descr=<Guard0x45eb538>) [p1, p0, p2, p3, p6, p13, i66, None]
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #22 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #25 CALL_FUNCTION')
+751: p68 = force_token()
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #0 LOAD_FAST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #3 LOAD_CONST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #6 BINARY_MODULO')
+754: i69 = int_eq(i66, -9223372036854775808)
guard_false(i69, descr=<Guard0x45eb4c0>) [p1, p0, p43, i66, p2, p3, p6, p13, p68, p44, None, None]
+773: i70 = int_mod(i66, 2)
+793: i71 = int_rshift(i70, 63)
+800: i72 = int_and(2, i71)
+808: i73 = int_add(i70, i72)
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #7 POP_JUMP_IF_FALSE')
+811: i74 = int_is_true(i73)
guard_false(i74, descr=<Guard0x45eb448>) [p1, p0, p43, p2, p3, p6, p13, i73, p68, p44, i66, None]
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #19 LOAD_CONST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #22 STORE_FAST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #25 LOAD_FAST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #28 RETURN_VALUE')
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #28 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #29 JUMP_ABSOLUTE')
+821: i75 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+829: i76 = int_lt(i75, 0)
guard_false(i76, descr=<Guard0x45eb3d0>) [p1, p0, p2, p3, p6, p13, None, None, None, i66, None]
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #13 FOR_ITER')
+839: jump(p0, p1, p2, p3, p6, i66, p13, i67, i28, i27, i26, p43, p44, descr=TargetToken(140633494570048))
+851: --end of the loop--
[19c47b40cd20] jit-log-opt-loop}
[19c47b6eb7bf] {jit-backend
[19c47b79a070] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c
[19c47b7a2f88] jit-backend-dump}
[19c47b7a3c6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980134c +0  28000000
[19c47b7a48db] jit-backend-dump}
[19c47b7a4e3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9801357 +0  28000000
[19c47b7a5878] jit-backend-dump}
[19c47b7a5dc0] {jit-backend-addr
bridge out of Guard 0x45eb448 has address 0x7fe7c9801348 to 0x7fe7c980153c
[19c47b7a6982] jit-backend-addr}
[19c47b7a73aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98013a4 +0  94010000
[19c47b7a7d82] jit-backend-dump}
[19c47b7aff26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98013b2 +0  A4010000
[19c47b7b0cbd] jit-backend-dump}
[19c47b7b124f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98013e5 +0  AD010000
[19c47b7b1b3f] jit-backend-dump}
[19c47b7b205b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98013f5 +0  BB010000
[19c47b7b29a7] jit-backend-dump}
[19c47b7b2dd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980140f +0  BF010000
[19c47b7b36a7] jit-backend-dump}
[19c47b7b3acf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980141c +0  D0010000
[19c47b7b43a7] jit-backend-dump}
[19c47b7b47cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9801434 +0  D6010000
[19c47b7b5095] jit-backend-dump}
[19c47b7b54b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9801441 +0  E7010000
[19c47b7b5d60] jit-backend-dump}
[19c47b7b6196] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9801457 +0  EF010000
[19c47b7b6a98] jit-backend-dump}
[19c47b7b6eb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9801465 +0  FF010000
[19c47b7b77d1] jit-backend-dump}
[19c47b7b7c66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980147c +0  06020000
[19c47b7b851e] jit-backend-dump}
[19c47b7b893a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c980149c +0  04020000
[19c47b7b91bf] jit-backend-dump}
[19c47b7b95d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98014de +0  E0010000
[19c47b7b9e95] jit-backend-dump}
[19c47b7ba2b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98014f0 +0  EC010000
[19c47b7bab86] jit-backend-dump}
[19c47b7bafa5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c98014fe +0  FC010000
[19c47b7bb8b6] jit-backend-dump}
[19c47b7bc307] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fe7c9800f69 +0  DB030000
[19c47b7bcbb0] jit-backend-dump}
[19c47b7bd4ac] jit-backend}
[19c47b7be407] {jit-log-opt-bridge
# bridge out of Guard 0x45eb448 with 46 ops
[p0, p1, p2, p3, p4, p5, p6, i7, p8, p9, i10]
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #10 LOAD_CONST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #13 STORE_FAST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #16 JUMP_FORWARD')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #25 LOAD_FAST')
debug_merge_point(1, 1, '<code object _inlined_bridge. file 'source.py'. line 56> #28 RETURN_VALUE')
+76: p11 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+87: guard_isnull(p11, descr=<Guard0x45f6020>) [p0, p1, p2, p11, p3, p4, p5, p6, p9, i10, p8]
+96: i12 = getfield_gc(p2, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+100: i13 = int_is_true(i12)
guard_false(i13, descr=<Guard0x45f6f20>) [p0, p1, p2, p3, p4, p5, p6, p9, i10, p8]
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #28 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #29 JUMP_ABSOLUTE')
setfield_gc(p2, p9, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+143: guard_not_invalidated(descr=<Guard0x45f6ea8>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+143: i16 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+151: i18 = int_lt(i16, 0)
guard_false(i18, descr=<Guard0x45f6e30>) [p0, p1, p3, p4, p5, p6, None, i10, None]
debug_merge_point(0, 0, '<code object inlined_bridge. file 'source.py'. line 63> #13 FOR_ITER')
+161: guard_nonnull(p1, descr=<Guard0x45f6db8>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+177: guard_nonnull_class(p6, 26177128, descr=<Guard0x45f6d40>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+203: p20 = getfield_gc(p6, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+207: guard_nonnull(p20, descr=<Guard0x45f6cc8>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+216: p21 = getfield_gc(p20, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+220: guard_nonnull_class(p21, 26517736, descr=<Guard0x45f6c50>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+240: p23 = getfield_gc(p20, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+244: guard_nonnull(p23, descr=<Guard0x45f6bd8>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+253: i24 = getfield_gc_pure(p23, descr=<FieldS tuple3.item0 8>)
+257: i25 = getfield_gc_pure(p23, descr=<FieldS tuple3.item1 16>)
+261: i26 = getfield_gc_pure(p23, descr=<FieldS tuple3.item2 24>)
+265: i28 = int_ge(i26, 1)
guard_true(i28, descr=<Guard0x45f6b60>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+275: i29 = getfield_gc(p6, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+279: i31 = int_ge(i29, 1)
guard_true(i31, descr=<Guard0x45f6ae8>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+289: p32 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+293: guard_value(p32, ConstPtr(ptr33), descr=<Guard0x45f6a70>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+312: p34 = getfield_gc(ConstPtr(ptr33), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+325: guard_value(p34, ConstPtr(ptr35), descr=<Guard0x45f69f8>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+344: p37 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+401: guard_nonnull(p37, descr=<Guard0x45f6980>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+410: p38 = getfield_gc(p37, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+414: p39 = getfield_gc(p37, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+418: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x45f6908>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+428: i41 = getfield_gc(p37, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+432: guard_value(i41, 0, descr=<Guard0x45f6890>) [p0, p1, p3, p4, p5, p6, None, i10, None]
+442: jump(p1, p0, p3, p4, p5, i10, p6, i29, i26, i25, i24, p37, p38, descr=TargetToken(140633494570048))
+500: --end of the loop--
[19c47b7f01de] jit-log-opt-bridge}
[19c47b895ecc] {jit-backend-counts
entry 0:1
TargetToken(140633495987968):1
TargetToken(140633495988056):41
entry 1:1
TargetToken(140633495988760):1
TargetToken(140633495988848):41
entry 2:4647
TargetToken(140633495989376):4647
TargetToken(140633495989464):9292
entry 3:201
TargetToken(140633495990080):201
TargetToken(140633495990168):4468
bridge 140633496281840:4446
bridge 140633496286280:4268
TargetToken(140633495991488):4268
entry 4:1
TargetToken(140633495992456):1
TargetToken(140633495992368):1938
entry 5:3173
bridge 140633542558448:2882
bridge 140633542560608:2074
bridge 140633542560128:158
entry 6:377
TargetToken(140633495993688):527
TargetToken(140633495993776):1411
bridge 140633542561328:1420
bridge 140633494417904:150
bridge 140633542560728:50
bridge 140633542560968:7
entry 7:201
TargetToken(140633494568992):9990
TargetToken(140633494569080):998737
bridge 140633494579704:9790
TargetToken(140633494569256):9789
entry 8:202
TargetToken(140633494569960):202
TargetToken(140633494570048):8736
bridge 73315400:4268
[19c47b89fb0a] jit-backend-counts}
